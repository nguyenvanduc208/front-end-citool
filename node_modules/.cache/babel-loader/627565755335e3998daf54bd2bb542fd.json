{"ast":null,"code":"import _objectSpread from \"D:\\\\Workspace\\\\ci-tools-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"D:\\\\Workspace\\\\ci-tools-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Workspace\\\\ci-tools-master\\\\frontend\\\\src\\\\components\\\\Style\\\\Detail\\\\Statistics.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './style.scss';\n\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n\n  return color;\n}\n\n;\n\nfunction translateY(value) {\n  return \"translateY(\".concat(value, \"px)\");\n}\n\nfunction Statistics(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        dataQueue = _useState2[0],\n        setDataQueue = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        activeItemIdx = _useState4[0],\n        setActiveItemIdx = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        highestValue = _useState6[0],\n        setHighestValue = _useState6[1];\n\n  const _useState7 = useState({}),\n        _useState8 = _slicedToArray(_useState7, 2),\n        currentValues = _useState8[0],\n        setCurrentValues = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        firstRun = _useState10[0],\n        setFirstRun = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        afterClick = _useState12[0],\n        setAfterClick = _useState12[1];\n\n  let iterationTimeoutHolder = null;\n\n  function start() {\n    if (activeItemIdx > 1) {\n      return;\n    }\n\n    if (props.onRunStart) {\n      props.onRunStart();\n    }\n\n    nextStep(true);\n  }\n\n  function setNextValues() {\n    if (!dataQueue[activeItemIdx]) {\n      iterationTimeoutHolder = null;\n\n      if (props.onRunEnd) {\n        props.onRunEnd();\n      }\n\n      return;\n    }\n\n    const roundData = dataQueue[activeItemIdx].values;\n    const nextValues = {};\n    let highestValue = 0;\n    roundData.map(c => {\n      nextValues[c.id] = _objectSpread({}, c, {\n        color: c.color || (currentValues[c.id] || {}).color || getRandomColor()\n      });\n\n      if (Math.abs(c.value) > highestValue) {\n        highestValue = Math.abs(c.value);\n      }\n\n      return c;\n    });\n    setCurrentValues(nextValues);\n    setHighestValue(highestValue);\n    setActiveItemIdx(activeItemIdx + 1);\n  }\n\n  function nextStep(firstRun = false) {\n    setFirstRun(firstRun);\n    setNextValues();\n  }\n\n  useEffect(() => {\n    setDataQueue(props.data);\n  }, []);\n  useEffect(() => {\n    if (props.startAutomatically) {\n      start();\n    } else {\n      setNextValues();\n    }\n  }, [dataQueue]);\n  useEffect(() => {\n    if (props.startAutomatically || afterClick) {\n      iterationTimeoutHolder = window.setTimeout(nextStep, firstRun ? props.startRunningTimeout : props.iterationTimeout);\n    }\n\n    return () => {\n      if (iterationTimeoutHolder) {\n        window.clearTimeout(iterationTimeoutHolder);\n      }\n    };\n  }, [activeItemIdx, afterClick]);\n  const keys = Object.keys(currentValues);\n  const barGapSize = props.barGapSize,\n        barHeight = props.barHeight,\n        baseline = props.baseline,\n        iterationTimeout = props.iterationTimeout,\n        chartWrapperStyles = props.chartWrapperStyles,\n        mainWrapperStyles = props.mainWrapperStyles,\n        iterationTitleStyles = props.iterationTitleStyles,\n        labelStyles = props.labelStyles,\n        baselineStyles = props.baselineStyles,\n        showTitle = props.showTitle;\n  const maxValue = highestValue / 0.10;\n  const sortedCurrentValues = keys.sort((a, b) => currentValues[b].value - currentValues[a].value);\n  const hasBaseline = baseline !== null && !isNaN(baseline);\n  const currentItem = dataQueue[activeItemIdx - 1] || {};\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"live-chart\",\n    style: mainWrapperStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"chart\",\n    style: chartWrapperStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-bars \".concat(hasBaseline ? 'with-baseline' : ''),\n    style: {\n      height: barHeight + barGapSize\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row fix-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }\n  }, Object.keys(currentValues).length > 0 ? props.sortkey.map((key, idx) => {\n    const currentValueData = currentValues[key];\n    const value = hasBaseline ? (currentValueData.value || baseline) - baseline : currentValueData.value;\n    let width = Math.abs(value / maxValue * 100);\n    let behindbaseline = false;\n\n    if (hasBaseline && currentValueData.value < baseline) {\n      behindbaseline = true;\n    }\n\n    if (hasBaseline) {\n      width = width / 2;\n    }\n\n    let widthStr;\n\n    if (isNaN(width) || !width) {\n      widthStr = '1px';\n    } else {\n      widthStr = \"\".concat(width, \"%\");\n    }\n\n    const boldText = {\n      fontWeight: 'bold'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bar-wrapper \".concat(behindbaseline ? 'behind-baseline col' : ''),\n      style: {\n        transitionDuration: iterationTimeout / 1000\n      },\n      key: \"bar_\".concat(key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        'float': 'left',\n        'text-transform': 'uppercase',\n        boldText,\n        'color': '#9a9a9a'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 35\n      }\n    }, !currentValueData.label ? key : currentValueData.label), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"value\",\n      style: {\n        color: typeof currentValueData.color === 'string' ? currentValueData.color : currentValueData.color[0]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 35\n      }\n    }, currentValueData.value)));\n  }) : \"\"))))), props.showStartButton && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start-button\",\n    onClick: () => setAfterClick(true),\n    style: props.startButtonStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, props.startButtonText));\n}\n\nStatistics.propTypes = {\n  startAutomatically: PropTypes.bool,\n  showTitle: PropTypes.bool,\n  iterationTimeout: PropTypes.number,\n  data: PropTypes.array,\n  sortkey: PropTypes.array,\n  startRunningTimeout: PropTypes.number,\n  barHeight: PropTypes.number,\n  barGapSize: PropTypes.number,\n  baseline: PropTypes.number,\n  showStartButton: PropTypes.bool,\n  startButtonText: PropTypes.string,\n  mainWrapperStyles: PropTypes.object,\n  chartWrapperStyles: PropTypes.object,\n  baselineStyles: PropTypes.object,\n  iterationTitleStyles: PropTypes.object,\n  labelStyles: PropTypes.object,\n  startButtonStyles: PropTypes.object,\n  onRunStart: PropTypes.func,\n  onRunEnd: PropTypes.func\n};\nStatistics.defaultProps = {\n  startAutomatically: true,\n  showTitle: true,\n  iterationTimeout: 200,\n  data: [],\n  sortkey: [],\n  startRunningTimeout: 0,\n  barHeight: 20,\n  barGapSize: 0,\n  baseline: null,\n  showStartButton: false,\n  startButtonText: 'Start',\n  mainWrapperStyles: {},\n  chartWrapperStyles: {},\n  baselineStyles: {},\n  iterationTitleStyles: {},\n  labelStyles: {},\n  startButtonStyles: {},\n  onRunStart: null,\n  onRunEnd: null\n};\nexport { Statistics };","map":{"version":3,"names":["React","useState","useEffect","PropTypes","getRandomColor","letters","color","i","Math","floor","random","translateY","value","Statistics","props","dataQueue","setDataQueue","activeItemIdx","setActiveItemIdx","highestValue","setHighestValue","currentValues","setCurrentValues","firstRun","setFirstRun","afterClick","setAfterClick","iterationTimeoutHolder","start","onRunStart","nextStep","setNextValues","onRunEnd","roundData","values","nextValues","map","c","id","abs","data","startAutomatically","window","setTimeout","startRunningTimeout","iterationTimeout","clearTimeout","keys","Object","barGapSize","barHeight","baseline","chartWrapperStyles","mainWrapperStyles","iterationTitleStyles","labelStyles","baselineStyles","showTitle","maxValue","sortedCurrentValues","sort","a","b","hasBaseline","isNaN","currentItem","height","length","sortkey","key","idx","currentValueData","width","behindbaseline","widthStr","boldText","fontWeight","transitionDuration","label","showStartButton","startButtonStyles","startButtonText","propTypes","bool","number","array","string","object","func","defaultProps"],"sources":["D:/Workspace/ci-tools-master/frontend/src/components/Style/Detail/Statistics.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)]\n  }\n  return color;\n};\n\nfunction translateY(value) {\n  return `translateY(${value}px)`;\n}\n\nfunction Statistics(props) {\n  const [dataQueue, setDataQueue] = useState([]);\n  const [activeItemIdx, setActiveItemIdx] = useState(0);\n  const [highestValue, setHighestValue] = useState(0);\n  const [currentValues, setCurrentValues] = useState({});\n  const [firstRun, setFirstRun] = useState(false);\n  const [afterClick, setAfterClick] = useState(false);\n  let iterationTimeoutHolder = null;\n\n  function start() {\n    if (activeItemIdx > 1) {\n      return;\n    }\n    if (props.onRunStart) {\n      props.onRunStart();\n    }\n    nextStep(true);\n  }\n\n  function setNextValues() {\n    if (!dataQueue[activeItemIdx]) {\n      iterationTimeoutHolder = null;\n      if (props.onRunEnd) {\n        props.onRunEnd();\n      }\n      return;\n    }\n\n    const roundData = dataQueue[activeItemIdx].values;\n    const nextValues = {};\n    let highestValue = 0;\n    roundData.map((c) => {\n      nextValues[c.id] = {\n        ...c,\n        color: c.color || (currentValues[c.id] || {}).color || getRandomColor()\n      };\n\n      if (Math.abs(c.value) > highestValue) {\n        highestValue = Math.abs(c.value);\n      }\n\n      return c;\n    });\n\n    setCurrentValues(nextValues);\n    setHighestValue(highestValue);\n    setActiveItemIdx(activeItemIdx + 1);\n  }\n\n  function nextStep(firstRun = false) {\n    setFirstRun(firstRun);\n    setNextValues();\n  }\n\n  useEffect(() => {\n    setDataQueue(props.data);\n  }, []);\n\n  useEffect(() => {\n    if (props.startAutomatically) {\n      start();\n    } else {\n      setNextValues();\n    }\n  }, [dataQueue]);\n\n  useEffect(() => {\n    if (props.startAutomatically || afterClick) {\n      iterationTimeoutHolder = window.setTimeout(nextStep, firstRun ? props.startRunningTimeout : props.iterationTimeout);\n    }\n\n    return () => {\n      if (iterationTimeoutHolder) {\n        window.clearTimeout(iterationTimeoutHolder);\n      }\n    };\n  }, [activeItemIdx, afterClick]);\n\n  const keys = Object.keys(currentValues);\n  const { barGapSize, barHeight, baseline, iterationTimeout, chartWrapperStyles, mainWrapperStyles, iterationTitleStyles, labelStyles, baselineStyles, showTitle } = props;\n  const maxValue = highestValue / 0.10;\n  const sortedCurrentValues = keys.sort((a, b) => currentValues[b].value - currentValues[a].value);\n  const hasBaseline = baseline !== null && !isNaN(baseline);\n  const currentItem = dataQueue[activeItemIdx - 1] || {};\n\n  return (\n      <div className=\"live-chart\" style={mainWrapperStyles}>\n        {\n          <div>\n\n            <React.Fragment>\n              <section className=\"chart\" style={chartWrapperStyles}>\n                <div className={`chart-bars ${hasBaseline ? 'with-baseline' : ''}`} style={{ height: (barHeight + barGapSize)  }}>\n                  <div className=\"row fix-row\">\n                  {\n                    Object.keys(currentValues).length > 0 ?\n                    props.sortkey.map((key, idx) => {\n                      const currentValueData = currentValues[key];\n                      const value = hasBaseline ? (currentValueData.value || baseline) - baseline : currentValueData.value;\n                      let width = Math.abs((value / maxValue * 100));\n                      let behindbaseline = false;\n                      if (hasBaseline && currentValueData.value < baseline) {\n                        behindbaseline = true;\n                      }\n\n                      if (hasBaseline) {\n                        width = width / 2;\n                      }\n\n                      let widthStr;\n                      if (isNaN(width) || !width) {\n                        widthStr = '1px';\n                      } else {\n                        widthStr = `${width}%`;\n                      }\n                      const boldText = {\n                        fontWeight: 'bold'\n                      };\n                      return (\n                              <div className=\"col-sm-2\">\n                                <div className={`bar-wrapper ${behindbaseline ? 'behind-baseline col' : ''}`} style={{ transitionDuration: iterationTimeout / 1000 }} key={`bar_${key}`}>\n                                {/*<div className={`bar-wrapper ${behindbaseline ? 'behind-baseline col' : ''}`} style={{ transform: translateY((barHeight + barGapSize) * idx), transitionDuration: iterationTimeout / 1000 }} key={`bar_${key}`}>*/}\n                                  <div style={{ 'float': 'left', 'text-transform': 'uppercase', boldText, 'color': '#9a9a9a'}}>\n                                    {\n                                      !currentValueData.label\n                                          ? key\n                                          : currentValueData.label\n                                    }\n                                  </div>\n                                  {/*{*/}\n                                  {/*  props.checkTotal === false ?*/}\n                                  {/*      <span className=\"bar\" style={{ height: barHeight, width: widthStr, background: typeof currentValueData.color === 'string' ? currentValueData.color : `linear-gradient(to right, ${currentValueData.color.join(',')})` }} />*/}\n                                  {/*      : \"\"*/}\n                                  {/*}*/}\n                                  <div className=\"value\" style={{ color: typeof currentValueData.color === 'string' ? currentValueData.color : currentValueData.color[0] }}>{currentValueData.value}</div>\n                                </div>\n                          </div>\n                      );\n                    }):\"\"\n                  }\n                  </div>\n                </div>\n              </section>\n            </React.Fragment>\n          </div>\n        }\n        {\n          props.showStartButton &&\n          <button className=\"start-button\" onClick={() => setAfterClick(true)} style={props.startButtonStyles}>{props.startButtonText}</button>\n        }\n      </div>\n  );\n}\n\nStatistics.propTypes = {\n  startAutomatically: PropTypes.bool,\n  showTitle: PropTypes.bool,\n  iterationTimeout: PropTypes.number,\n  data: PropTypes.array,\n  sortkey: PropTypes.array,\n  startRunningTimeout: PropTypes.number,\n  barHeight: PropTypes.number,\n  barGapSize: PropTypes.number,\n  baseline: PropTypes.number,\n  showStartButton: PropTypes.bool,\n  startButtonText: PropTypes.string,\n  mainWrapperStyles: PropTypes.object,\n  chartWrapperStyles: PropTypes.object,\n  baselineStyles: PropTypes.object,\n  iterationTitleStyles: PropTypes.object,\n  labelStyles: PropTypes.object,\n  startButtonStyles: PropTypes.object,\n  onRunStart: PropTypes.func,\n  onRunEnd: PropTypes.func\n};\n\nStatistics.defaultProps = {\n  startAutomatically: true,\n  showTitle: true,\n  iterationTimeout: 200,\n  data: [],\n  sortkey:[],\n  startRunningTimeout: 0,\n  barHeight: 20,\n  barGapSize: 0,\n  baseline: null,\n  showStartButton: false,\n  startButtonText: 'Start',\n  mainWrapperStyles: {},\n  chartWrapperStyles: {},\n  baselineStyles: {},\n  iterationTitleStyles: {},\n  labelStyles: {},\n  startButtonStyles: {},\n  onRunStart: null,\n  onRunEnd: null\n};\n\nexport {\n  Statistics\n};"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,cAAP;;AAEA,SAASC,cAAT,GAA0B;EACxB,MAAMC,OAAO,GAAG,kBAAhB;EACA,IAAIC,KAAK,GAAG,GAAZ;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;IAC1BD,KAAK,IAAID,OAAO,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAhB;EACD;;EACD,OAAOJ,KAAP;AACD;;AAAA;;AAED,SAASK,UAAT,CAAoBC,KAApB,EAA2B;EACzB,4BAAqBA,KAArB;AACD;;AAED,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EAAA,kBACSb,QAAQ,CAAC,EAAD,CADjB;EAAA;EAAA,MAClBc,SADkB;EAAA,MACPC,YADO;;EAAA,mBAEiBf,QAAQ,CAAC,CAAD,CAFzB;EAAA;EAAA,MAElBgB,aAFkB;EAAA,MAEHC,gBAFG;;EAAA,mBAGejB,QAAQ,CAAC,CAAD,CAHvB;EAAA;EAAA,MAGlBkB,YAHkB;EAAA,MAGJC,eAHI;;EAAA,mBAIiBnB,QAAQ,CAAC,EAAD,CAJzB;EAAA;EAAA,MAIlBoB,aAJkB;EAAA,MAIHC,gBAJG;;EAAA,mBAKOrB,QAAQ,CAAC,KAAD,CALf;EAAA;EAAA,MAKlBsB,QALkB;EAAA,MAKRC,WALQ;;EAAA,oBAMWvB,QAAQ,CAAC,KAAD,CANnB;EAAA;EAAA,MAMlBwB,UANkB;EAAA,MAMNC,aANM;;EAOzB,IAAIC,sBAAsB,GAAG,IAA7B;;EAEA,SAASC,KAAT,GAAiB;IACf,IAAIX,aAAa,GAAG,CAApB,EAAuB;MACrB;IACD;;IACD,IAAIH,KAAK,CAACe,UAAV,EAAsB;MACpBf,KAAK,CAACe,UAAN;IACD;;IACDC,QAAQ,CAAC,IAAD,CAAR;EACD;;EAED,SAASC,aAAT,GAAyB;IACvB,IAAI,CAAChB,SAAS,CAACE,aAAD,CAAd,EAA+B;MAC7BU,sBAAsB,GAAG,IAAzB;;MACA,IAAIb,KAAK,CAACkB,QAAV,EAAoB;QAClBlB,KAAK,CAACkB,QAAN;MACD;;MACD;IACD;;IAED,MAAMC,SAAS,GAAGlB,SAAS,CAACE,aAAD,CAAT,CAAyBiB,MAA3C;IACA,MAAMC,UAAU,GAAG,EAAnB;IACA,IAAIhB,YAAY,GAAG,CAAnB;IACAc,SAAS,CAACG,GAAV,CAAeC,CAAD,IAAO;MACnBF,UAAU,CAACE,CAAC,CAACC,EAAH,CAAV,qBACKD,CADL;QAEE/B,KAAK,EAAE+B,CAAC,CAAC/B,KAAF,IAAW,CAACe,aAAa,CAACgB,CAAC,CAACC,EAAH,CAAb,IAAuB,EAAxB,EAA4BhC,KAAvC,IAAgDF,cAAc;MAFvE;;MAKA,IAAII,IAAI,CAAC+B,GAAL,CAASF,CAAC,CAACzB,KAAX,IAAoBO,YAAxB,EAAsC;QACpCA,YAAY,GAAGX,IAAI,CAAC+B,GAAL,CAASF,CAAC,CAACzB,KAAX,CAAf;MACD;;MAED,OAAOyB,CAAP;IACD,CAXD;IAaAf,gBAAgB,CAACa,UAAD,CAAhB;IACAf,eAAe,CAACD,YAAD,CAAf;IACAD,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;EACD;;EAED,SAASa,QAAT,CAAkBP,QAAQ,GAAG,KAA7B,EAAoC;IAClCC,WAAW,CAACD,QAAD,CAAX;IACAQ,aAAa;EACd;;EAED7B,SAAS,CAAC,MAAM;IACdc,YAAY,CAACF,KAAK,CAAC0B,IAAP,CAAZ;EACD,CAFQ,EAEN,EAFM,CAAT;EAIAtC,SAAS,CAAC,MAAM;IACd,IAAIY,KAAK,CAAC2B,kBAAV,EAA8B;MAC5Bb,KAAK;IACN,CAFD,MAEO;MACLG,aAAa;IACd;EACF,CANQ,EAMN,CAAChB,SAAD,CANM,CAAT;EAQAb,SAAS,CAAC,MAAM;IACd,IAAIY,KAAK,CAAC2B,kBAAN,IAA4BhB,UAAhC,EAA4C;MAC1CE,sBAAsB,GAAGe,MAAM,CAACC,UAAP,CAAkBb,QAAlB,EAA4BP,QAAQ,GAAGT,KAAK,CAAC8B,mBAAT,GAA+B9B,KAAK,CAAC+B,gBAAzE,CAAzB;IACD;;IAED,OAAO,MAAM;MACX,IAAIlB,sBAAJ,EAA4B;QAC1Be,MAAM,CAACI,YAAP,CAAoBnB,sBAApB;MACD;IACF,CAJD;EAKD,CAVQ,EAUN,CAACV,aAAD,EAAgBQ,UAAhB,CAVM,CAAT;EAYA,MAAMsB,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAY1B,aAAZ,CAAb;EA9EyB,MA+EjB4B,UA/EiB,GA+E0InC,KA/E1I,CA+EjBmC,UA/EiB;EAAA,MA+ELC,SA/EK,GA+E0IpC,KA/E1I,CA+ELoC,SA/EK;EAAA,MA+EMC,QA/EN,GA+E0IrC,KA/E1I,CA+EMqC,QA/EN;EAAA,MA+EgBN,gBA/EhB,GA+E0I/B,KA/E1I,CA+EgB+B,gBA/EhB;EAAA,MA+EkCO,kBA/ElC,GA+E0ItC,KA/E1I,CA+EkCsC,kBA/ElC;EAAA,MA+EsDC,iBA/EtD,GA+E0IvC,KA/E1I,CA+EsDuC,iBA/EtD;EAAA,MA+EyEC,oBA/EzE,GA+E0IxC,KA/E1I,CA+EyEwC,oBA/EzE;EAAA,MA+E+FC,WA/E/F,GA+E0IzC,KA/E1I,CA+E+FyC,WA/E/F;EAAA,MA+E4GC,cA/E5G,GA+E0I1C,KA/E1I,CA+E4G0C,cA/E5G;EAAA,MA+E4HC,SA/E5H,GA+E0I3C,KA/E1I,CA+E4H2C,SA/E5H;EAgFzB,MAAMC,QAAQ,GAAGvC,YAAY,GAAG,IAAhC;EACA,MAAMwC,mBAAmB,GAAGZ,IAAI,CAACa,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAUzC,aAAa,CAACyC,CAAD,CAAb,CAAiBlD,KAAjB,GAAyBS,aAAa,CAACwC,CAAD,CAAb,CAAiBjD,KAA9D,CAA5B;EACA,MAAMmD,WAAW,GAAGZ,QAAQ,KAAK,IAAb,IAAqB,CAACa,KAAK,CAACb,QAAD,CAA/C;EACA,MAAMc,WAAW,GAAGlD,SAAS,CAACE,aAAa,GAAG,CAAjB,CAAT,IAAgC,EAApD;EAEA,oBACI;IAAK,SAAS,EAAC,YAAf;IAA4B,KAAK,EAAEoC,iBAAnC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAS,SAAS,EAAC,OAAnB;IAA2B,KAAK,EAAED,kBAAlC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,uBAAgBW,WAAW,GAAG,eAAH,GAAqB,EAAhD,CAAd;IAAoE,KAAK,EAAE;MAAEG,MAAM,EAAGhB,SAAS,GAAGD;IAAvB,CAA3E;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,aAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEED,MAAM,CAACD,IAAP,CAAY1B,aAAZ,EAA2B8C,MAA3B,GAAoC,CAApC,GACArD,KAAK,CAACsD,OAAN,CAAchC,GAAd,CAAkB,CAACiC,GAAD,EAAMC,GAAN,KAAc;IAC9B,MAAMC,gBAAgB,GAAGlD,aAAa,CAACgD,GAAD,CAAtC;IACA,MAAMzD,KAAK,GAAGmD,WAAW,GAAG,CAACQ,gBAAgB,CAAC3D,KAAjB,IAA0BuC,QAA3B,IAAuCA,QAA1C,GAAqDoB,gBAAgB,CAAC3D,KAA/F;IACA,IAAI4D,KAAK,GAAGhE,IAAI,CAAC+B,GAAL,CAAU3B,KAAK,GAAG8C,QAAR,GAAmB,GAA7B,CAAZ;IACA,IAAIe,cAAc,GAAG,KAArB;;IACA,IAAIV,WAAW,IAAIQ,gBAAgB,CAAC3D,KAAjB,GAAyBuC,QAA5C,EAAsD;MACpDsB,cAAc,GAAG,IAAjB;IACD;;IAED,IAAIV,WAAJ,EAAiB;MACfS,KAAK,GAAGA,KAAK,GAAG,CAAhB;IACD;;IAED,IAAIE,QAAJ;;IACA,IAAIV,KAAK,CAACQ,KAAD,CAAL,IAAgB,CAACA,KAArB,EAA4B;MAC1BE,QAAQ,GAAG,KAAX;IACD,CAFD,MAEO;MACLA,QAAQ,aAAMF,KAAN,MAAR;IACD;;IACD,MAAMG,QAAQ,GAAG;MACfC,UAAU,EAAE;IADG,CAAjB;IAGA,oBACQ;MAAK,SAAS,EAAC,UAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAK,SAAS,wBAAiBH,cAAc,GAAG,qBAAH,GAA2B,EAA1D,CAAd;MAA8E,KAAK,EAAE;QAAEI,kBAAkB,EAAEhC,gBAAgB,GAAG;MAAzC,CAArF;MAAsI,GAAG,gBAASwB,GAAT,CAAzI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAEE;MAAK,KAAK,EAAE;QAAE,SAAS,MAAX;QAAmB,kBAAkB,WAArC;QAAkDM,QAAlD;QAA4D,SAAS;MAArE,CAAZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAEI,CAACJ,gBAAgB,CAACO,KAAlB,GACMT,GADN,GAEME,gBAAgB,CAACO,KAJ3B,CAFF,eAcE;MAAK,SAAS,EAAC,OAAf;MAAuB,KAAK,EAAE;QAAExE,KAAK,EAAE,OAAOiE,gBAAgB,CAACjE,KAAxB,KAAkC,QAAlC,GAA6CiE,gBAAgB,CAACjE,KAA9D,GAAsEiE,gBAAgB,CAACjE,KAAjB,CAAuB,CAAvB;MAA/E,CAA9B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAA2IiE,gBAAgB,CAAC3D,KAA5J,CAdF,CADF,CADR;EAoBD,CA1CD,CADA,GA2CG,EA7CL,CADF,CADF,CADF,CAFF,CAFJ,EA6DIE,KAAK,CAACiE,eAAN,iBACA;IAAQ,SAAS,EAAC,cAAlB;IAAiC,OAAO,EAAE,MAAMrD,aAAa,CAAC,IAAD,CAA7D;IAAqE,KAAK,EAAEZ,KAAK,CAACkE,iBAAlF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAsGlE,KAAK,CAACmE,eAA5G,CA9DJ,CADJ;AAmED;;AAEDpE,UAAU,CAACqE,SAAX,GAAuB;EACrBzC,kBAAkB,EAAEtC,SAAS,CAACgF,IADT;EAErB1B,SAAS,EAAEtD,SAAS,CAACgF,IAFA;EAGrBtC,gBAAgB,EAAE1C,SAAS,CAACiF,MAHP;EAIrB5C,IAAI,EAAErC,SAAS,CAACkF,KAJK;EAKrBjB,OAAO,EAAEjE,SAAS,CAACkF,KALE;EAMrBzC,mBAAmB,EAAEzC,SAAS,CAACiF,MANV;EAOrBlC,SAAS,EAAE/C,SAAS,CAACiF,MAPA;EAQrBnC,UAAU,EAAE9C,SAAS,CAACiF,MARD;EASrBjC,QAAQ,EAAEhD,SAAS,CAACiF,MATC;EAUrBL,eAAe,EAAE5E,SAAS,CAACgF,IAVN;EAWrBF,eAAe,EAAE9E,SAAS,CAACmF,MAXN;EAYrBjC,iBAAiB,EAAElD,SAAS,CAACoF,MAZR;EAarBnC,kBAAkB,EAAEjD,SAAS,CAACoF,MAbT;EAcrB/B,cAAc,EAAErD,SAAS,CAACoF,MAdL;EAerBjC,oBAAoB,EAAEnD,SAAS,CAACoF,MAfX;EAgBrBhC,WAAW,EAAEpD,SAAS,CAACoF,MAhBF;EAiBrBP,iBAAiB,EAAE7E,SAAS,CAACoF,MAjBR;EAkBrB1D,UAAU,EAAE1B,SAAS,CAACqF,IAlBD;EAmBrBxD,QAAQ,EAAE7B,SAAS,CAACqF;AAnBC,CAAvB;AAsBA3E,UAAU,CAAC4E,YAAX,GAA0B;EACxBhD,kBAAkB,EAAE,IADI;EAExBgB,SAAS,EAAE,IAFa;EAGxBZ,gBAAgB,EAAE,GAHM;EAIxBL,IAAI,EAAE,EAJkB;EAKxB4B,OAAO,EAAC,EALgB;EAMxBxB,mBAAmB,EAAE,CANG;EAOxBM,SAAS,EAAE,EAPa;EAQxBD,UAAU,EAAE,CARY;EASxBE,QAAQ,EAAE,IATc;EAUxB4B,eAAe,EAAE,KAVO;EAWxBE,eAAe,EAAE,OAXO;EAYxB5B,iBAAiB,EAAE,EAZK;EAaxBD,kBAAkB,EAAE,EAbI;EAcxBI,cAAc,EAAE,EAdQ;EAexBF,oBAAoB,EAAE,EAfE;EAgBxBC,WAAW,EAAE,EAhBW;EAiBxByB,iBAAiB,EAAE,EAjBK;EAkBxBnD,UAAU,EAAE,IAlBY;EAmBxBG,QAAQ,EAAE;AAnBc,CAA1B;AAsBA,SACEnB,UADF"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\ci-tools\\\\frontend\\\\src\\\\components\\\\Style\\\\Detail\\\\LanguageStatistics.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Statistics } from \"./Statistics\";\nimport Card from \"../../Card/Card\";\nexport default function LanguageStatistics(props) {\n  const data = props.data;\n  let totalLow = 0;\n  let totaHeight = 0;\n  let totalMedium = 0;\n  let totalCritical = 0;\n  let to = [{\n    \"name\": \"Round 1\",\n    \"values\": [{\n      \"id\": 4,\n      \"label\": \"Low\",\n      \"value\": 0,\n      \"color\": \"black\"\n    }, {\n      \"id\": 3,\n      \"label\": \"Medium\",\n      \"value\": 0,\n      \"color\": [\"green\", \"green\"]\n    }, {\n      \"id\": 2,\n      \"label\": \"High\",\n      \"value\": 0,\n      \"color\": [\"orange\", \"orange\"]\n    }, {\n      \"id\": 1,\n      \"label\": \"Critical\",\n      \"value\": 0,\n      \"color\": [\"red\", \"red\"]\n    }]\n  }, {\n    \"name\": \"Round 2\",\n    \"values\": [{\n      \"id\": 4,\n      \"label\": \"Low\",\n      \"value\": 0,\n      \"color\": \"black\"\n    }, {\n      \"id\": 3,\n      \"label\": \"Medium\",\n      \"value\": 0,\n      \"color\": [\"green\"]\n    }, {\n      \"id\": 2,\n      \"label\": \"High\",\n      \"value\": 0,\n      \"color\": [\"orange\"]\n    }, {\n      \"id\": 1,\n      \"label\": \"Critical\",\n      \"value\": 0,\n      \"color\": [\"red\", \"red\"]\n    }]\n  }, {\n    \"name\": \"Round 3\",\n    \"values\": [{\n      \"id\": 4,\n      \"label\": \"Low\",\n      \"value\": 654,\n      \"color\": \"black\"\n    }, {\n      \"id\": 3,\n      \"label\": \"Medium\",\n      \"value\": 1002,\n      \"color\": [\"green\"]\n    }, {\n      \"id\": 2,\n      \"label\": \"High\",\n      \"value\": 20,\n      \"color\": [\"orange\"]\n    }, {\n      \"id\": 1,\n      \"label\": \"Critical\",\n      \"value\": 0,\n      \"color\": [\"red\", \"red\"]\n    }]\n  }];\n\n  if (data.results) {\n    data.results.map(item => {\n      if (item.severity === \"Low\" || item.severity === \"Unknown\" || item.severity === \"Everything else\") {\n        totalLow += 1;\n      }\n\n      if (item.severity === \"High\") {\n        totaHeight += 1;\n      }\n\n      if (item.severity === \"Medium\") {\n        totalMedium += 1;\n      }\n\n      if (item.severity === \"Critical\") {\n        totalCritical += 1;\n      }\n    });\n  } else {\n    data.data.map(item => {\n      if (item.severity === \"Low\" || item.severity === \"Unknown\" || item.severity === \"Everything else\") {\n        totalLow += 1;\n      }\n\n      if (item.severity === \"High\") {\n        totaHeight += 1;\n      }\n\n      if (item.severity === \"Medium\") {\n        totalMedium += 1;\n      }\n\n      if (item.severity === \"Critical\") {\n        totalCritical += 1;\n      }\n    });\n  }\n\n  to[2].values.forEach(item => {\n    if (item.label === \"Low\") {\n      item.value = totalLow;\n    }\n\n    if (item.label === \"High\") {\n      item.value = totaHeight;\n    }\n\n    if (item.label === \"Medium\") {\n      item.value = totalMedium;\n    }\n\n    if (item.label === \"Critical\") {\n      item.value = totalCritical;\n    }\n  });\n  const sortedCurrentValuesNew = [\"1\", \"2\", \"3\", \"4\"];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Statistics, {\n    data: to,\n    iterationTimeout: 100,\n    sortkey: sortedCurrentValuesNew,\n    checkTotal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  })));\n} // LanguageStatistics.propTypes = {\n//   data:  PropTypes.any.isRequired,\n//   // index: PropTypes.any.isRequired,\n//   // value: PropTypes.any.isRequired,\n// };","map":{"version":3,"names":["React","useState","useEffect","PropTypes","Statistics","Card","LanguageStatistics","props","data","totalLow","totaHeight","totalMedium","totalCritical","to","results","map","item","severity","values","forEach","label","value","sortedCurrentValuesNew"],"sources":["C:/web/ci-tools/frontend/src/components/Style/Detail/LanguageStatistics.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Statistics} from \"./Statistics\";\r\nimport Card from \"../../Card/Card\";\r\n\r\nexport default function LanguageStatistics(props) {\r\n  const { data} = props;\r\n  let totalLow = 0;\r\n  let totaHeight = 0;\r\n  let totalMedium = 0;\r\n  let totalCritical = 0;\r\n  let to = [\r\n    {\r\n      \"name\": \"Round 1\",\r\n      \"values\": [\r\n        {\r\n          \"id\": 4,\r\n          \"label\": \"Low\",\r\n          \"value\": 0,\r\n          \"color\": \"black\"\r\n        },\r\n        {\r\n          \"id\": 3,\r\n          \"label\": \"Medium\",\r\n          \"value\": 0,\r\n          \"color\": [\"green\", \"green\"]\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"label\": \"High\",\r\n          \"value\": 0,\r\n          \"color\": [\"orange\",\"orange\"]\r\n        },{\r\n          \"id\": 1,\r\n          \"label\": \"Critical\",\r\n          \"value\": 0,\r\n          \"color\": [\"red\",\"red\"]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"Round 2\",\r\n      \"values\": [\r\n        {\r\n          \"id\": 4,\r\n          \"label\": \"Low\",\r\n          \"value\": 0,\r\n          \"color\": \"black\"\r\n        },\r\n        {\r\n          \"id\": 3,\r\n          \"label\": \"Medium\",\r\n          \"value\": 0,\r\n          \"color\": [\"green\"]\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"label\": \"High\",\r\n          \"value\": 0,\r\n          \"color\": [\"orange\"]\r\n        },\r\n        {\r\n          \"id\": 1,\r\n          \"label\": \"Critical\",\r\n          \"value\": 0,\r\n          \"color\": [\"red\",\"red\"]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"Round 3\",\r\n      \"values\": [\r\n        {\r\n          \"id\": 4,\r\n          \"label\": \"Low\",\r\n          \"value\": 654,\r\n          \"color\": \"black\"\r\n        },\r\n        {\r\n          \"id\": 3,\r\n          \"label\": \"Medium\",\r\n          \"value\": 1002,\r\n          \"color\": [\"green\"]\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"label\": \"High\",\r\n          \"value\": 20,\r\n          \"color\": [\"orange\"]\r\n        },\r\n        {\r\n          \"id\": 1,\r\n          \"label\": \"Critical\",\r\n          \"value\": 0,\r\n          \"color\": [\"red\",\"red\"]\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n  if(data.results) {\r\n    data.results.map((item) => {\r\n          if(item.severity === \"Low\" || item.severity === \"Unknown\" || item.severity === \"Everything else\") {\r\n            totalLow += 1;\r\n          }\r\n          if(item.severity === \"High\") {\r\n            totaHeight += 1;\r\n          }\r\n          if(item.severity === \"Medium\") {\r\n            totalMedium += 1;\r\n          }\r\n          if(item.severity === \"Critical\") {\r\n            totalCritical += 1;\r\n          }\r\n        }\r\n    );\r\n  } else {\r\n    data.data.map((item) => {\r\n          if(item.severity === \"Low\" || item.severity === \"Unknown\" || item.severity === \"Everything else\") {\r\n            totalLow += 1;\r\n          }\r\n          if(item.severity === \"High\") {\r\n            totaHeight += 1;\r\n          }\r\n          if(item.severity === \"Medium\") {\r\n            totalMedium += 1;\r\n          }\r\n          if(item.severity === \"Critical\") {\r\n            totalCritical += 1;\r\n          }\r\n        }\r\n    );\r\n  }\r\n\r\n  to[2].values.forEach((item)=>{\r\n    if(item.label === \"Low\") {\r\n      item.value = totalLow\r\n    }\r\n    if(item.label === \"High\") {\r\n      item.value = totaHeight\r\n    }\r\n    if(item.label === \"Medium\") {\r\n      item.value = totalMedium\r\n    }\r\n    if(item.label === \"Critical\") {\r\n      item.value = totalCritical\r\n    }\r\n  })\r\n  const sortedCurrentValuesNew = [\"1\",\"2\",\"3\",\"4\"];\r\n  return (\r\n      <div>\r\n        <div>\r\n          <Statistics\r\n              data={to}\r\n              iterationTimeout={100}\r\n              sortkey={sortedCurrentValuesNew}\r\n              checkTotal={true}\r\n          />\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\n// LanguageStatistics.propTypes = {\r\n//   data:  PropTypes.any.isRequired,\r\n//   // index: PropTypes.any.isRequired,\r\n//   // value: PropTypes.any.isRequired,\r\n// };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
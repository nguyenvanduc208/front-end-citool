{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\ci-tools-master\\\\frontend\\\\src\\\\components\\\\Dast\\\\DashHistory.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport History from './History/History';\nimport { orderBy } from 'lodash';\nimport SweetAlert from 'sweetalert-react';\nimport '../../assets/css/sweetalert.css';\nimport { getDastTask, getDastReport } from \"../../api\";\nimport { tokenName } from \"../../api/const\";\nimport { STATUS } from '../../api/const';\nimport { errorNoti } from \"../Notifi\";\nimport { detail, adminLayout, detailDast } from \"../../config\";\nimport { Link } from \"react-router-dom\";\nimport Loader from 'react-loader-spinner';\n\nclass DashHistory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      items: [],\n      showAlert: false,\n      statusPopup: false,\n      idAlert: '',\n      users: [],\n      responseDetail: []\n    };\n    this.deleteRecord = this.deleteRecord.bind(this);\n    this.downloadDastReport = this.downloadDastReport.bind(this);\n    this.columns = [{\n      key: \"target_url\",\n      text: \"Website URL\",\n      className: \"target_url\",\n      align: \"left\",\n      sortable: true,\n      width: 200\n    }, {\n      key: \"target_type\",\n      text: \"Scan Target\",\n      className: \"scan_target\",\n      align: \"left\",\n      sortable: true,\n      width: 100\n    }, {\n      key: \"scan_type\",\n      text: \"Scan Type\",\n      className: \"scan_type\",\n      align: \"left\",\n      sortable: true,\n      width: 150\n    }, {\n      key: \"created_at\",\n      text: \"Start Time\",\n      className: \"created_at\",\n      sortable: true,\n      width: 150\n    }, {\n      key: \"status\",\n      text: \"Status\",\n      className: \"status\",\n      width: 100,\n      align: \"center\",\n      sortable: true,\n      cell: record => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }\n        }, {\n          'PENDING': /*#__PURE__*/React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 48\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            class: \"fa fa-stop-circle pending-status\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 53\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            class: \"pending-status\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 53\n            }\n          }, record.status)),\n          'RUNNING': /*#__PURE__*/React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 48\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            class: \"fa fa-hourglass-half running-status\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 53\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            class: \"running-status\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 53\n            }\n          }, record.status)),\n          'COMPLETED': /*#__PURE__*/React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 50\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            class: \"fa fa-check-circle complete-status\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 53\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            class: \"complete-status\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 53\n            }\n          }, record.status)),\n          'ERROR': /*#__PURE__*/React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 46\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            class: \"fa fa-exclamation-circle error-status\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 49\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            class: \"error-status\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 49\n            }\n          }, record.status))\n        }[record.status]);\n      }\n    }, {\n      key: \"report\",\n      text: \"Report\",\n      className: \"report\",\n      sortable: true,\n      align: \"center\",\n      width: 100,\n      cell: record => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }\n        }, record.status === \"COMPLETED\" ? /*#__PURE__*/React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"\".concat(adminLayout + detailDast, \"/\").concat(record.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-fill btn btn-info btn-sm\",\n          onClick: () => window.location.href = \"\".concat(adminLayout + detailDast, \"/\").concat(record.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 41\n          }\n        }, \"Show Detail\"))) : record.status === STATUS.RUNNING && /*#__PURE__*/React.createElement(Loader, {\n          type: \"ThreeDots\",\n          color: \"#00C6E7\",\n          height: 20,\n          width: 50,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 37\n          }\n        }));\n      }\n    }, {\n      key: \"report\",\n      text: \"HTML report\",\n      className: \"report\",\n      sortable: true,\n      width: 100,\n      align: \"center\",\n      cell: record => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }\n        }, record.status === \"COMPLETED\" ? /*#__PURE__*/React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-fill btn btn-info btn-sm\",\n          onClick: () => this.downloadDastReport(record.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 37\n          }\n        }, \"Download\")) : record.status === STATUS.RUNNING && /*#__PURE__*/React.createElement(Loader, {\n          type: \"ThreeDots\",\n          color: \"#00C6E7\",\n          height: 20,\n          width: 50,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 37\n          }\n        }));\n      }\n    }, {\n      key: \"action\",\n      text: \"Action\",\n      className: \"action\",\n      width: 50,\n      align: \"center\",\n      sortable: false,\n      cell: record => {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-danger btn-sm\",\n          onClick: () => this.ShowAlert(record),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"glyphicon glyphicon-trash fa fa-trash\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 33\n          }\n        })), /*#__PURE__*/React.createElement(SweetAlert, {\n          show: this.state.showAlert,\n          title: \"Delete Record?\",\n          text: \"You cannot undo this action\",\n          showCancelButton: true,\n          onOutsideClick: () => this.setState({\n            showAlert: false\n          }),\n          onEscapeKey: () => this.setState({\n            showAlert: false\n          }),\n          onCancel: () => this.setState({\n            showAlert: false\n          }),\n          onConfirm: () => this.deleteRecord(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }\n        }));\n      }\n    }];\n    this.config = {\n      key_column: 'id',\n      page_size: 10,\n      length_menu: [10, 20, 50],\n      filename: \"Records\",\n      no_data_text: 'No data available!',\n      language: {\n        length_menu: \"Show _MENU_ result per page\",\n        filter: \"Filter in records...\",\n        info: \"Showing _START_ to _END_ of _TOTAL_ records\",\n        pagination: {\n          first: \"First\",\n          previous: /*#__PURE__*/React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 31\n            }\n          }, \"\\u25C4\"),\n          next: /*#__PURE__*/React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 27\n            }\n          }, \"\\u25BA\"),\n          last: \"Last\"\n        }\n      },\n      pagination: \"basic\",\n      //advance\n      show_length_menu: true,\n      show_filter: true,\n      show_pagination: true,\n      show_info: true\n    };\n    this.extraButtons = [{\n      className: \"btn btn-primary buttons-pdf\",\n      title: \"Export TEst\",\n      children: [/*#__PURE__*/React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"glyphicon glyphicon-print fa fa-print\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }\n      }))]\n    }, {\n      className: \"btn btn-primary buttons-pdf\",\n      title: \"Export TEst\",\n      children: [/*#__PURE__*/React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"glyphicon glyphicon-print fa fa-print\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }\n      }))]\n    }];\n  } // load data the first time\n\n\n  componentDidMount() {\n    const token = localStorage.getItem(tokenName);\n    getDastTask(token, 'GET', null).then(res => {\n      this.timer = setTimeout(() => {\n        this.setState({\n          loading: false,\n          items: res.data\n        });\n      }, 1000);\n    });\n  } // Update data response continuously\n\n\n  componentDidUpdate() {\n    const token = localStorage.getItem(tokenName);\n    getDastTask(token, 'GET', null).then(res => {\n      setTimeout(() => {\n        this.setState({\n          loading: false,\n          items: res.data\n        });\n      }, 3000);\n    });\n    clearInterval(this.timer);\n  } //Show alert when delete record\n\n\n  ShowAlert(record) {\n    this.setState({\n      showAlert: true,\n      idAlert: record.id\n    });\n  } //Delete record\n\n\n  deleteRecord() {\n    let _this$state = this.state,\n        idAlert = _this$state.idAlert,\n        items = _this$state.items;\n    const token = localStorage.getItem(tokenName);\n    getDastTask(token, 'DELETE', null, \"/\".concat(idAlert)).then(res => {\n      if (res.status === 204) {\n        if (items.length > 0) {\n          for (let i = 0; i < items.length; i++) {\n            if (items[i].id === idAlert) {\n              items.splice(i, 1);\n              break;\n            }\n          }\n        }\n      }\n\n      this.setState({\n        showAlert: false\n      });\n    });\n  }\n\n  pageChange(pageData) {\n    console.log(\"OnPageChange\", pageData);\n  }\n\n  customSort(column, records, sortOrder) {\n    return orderBy(records, [column], [sortOrder]);\n  } // Download Report from S3\n  // const downloadDastReport  = () => {\n\n\n  downloadDastReport(id) {\n    const token = localStorage.getItem(tokenName);\n    console.log('downloadDastReport');\n    console.log(id);\n    getDastReport(token, 'GET', null, id).then(res => {\n      if (res.status === 200) {\n        let exportedFilename = 'detail' + '.csv' || 'export.csv';\n        let downloadLink = document.createElement(\"a\"); // Create a link to the file\n\n        downloadLink.setAttribute('href', res.data.download_link); // Setting the file name\n\n        downloadLink.download = exportedFilename; //triggering the function\n\n        downloadLink.click();\n        downloadLink.remove();\n      }\n    }).catch(err => {\n      if (err.response.status === 401) {\n        window.location = '/login';\n      } else {\n        return Promise.reject(err);\n      }\n    });\n  } // getDownloadDashFileLink (id) {\n  //     const token = localStorage.getItem(tokenName);\n  //     console.log ('getDownloadDashFileLink');\n  //     console.log (id);\n  //     getDastReport(token, 'GET', null, id).then(res => {\n  //         if (res.status === 200) {\n  //             let exportedFilename = 'detail' + '.csv' || 'export.csv';\n  //             let downloadLink = document.createElement(\"a\");\n  //             // Create a link to the file\n  //             downloadLink.setAttribute('href', res.data.download_link);\n  //             downloadLink.setAttribute('target', \"_blank\");\n  //             // Setting the file name\n  //             //downloadLink.download = exportedFilename;\n  //             //triggering the function\n  //             console.log (downloadLink);\n  //             downloadLink.click();\n  //             downloadLink.remove();\n  //         }\n  //     }).catch(err => {\n  //         if (err.response.status === 401) {\n  //             window.location = '/login';\n  //         }else {\n  //             return Promise.reject(err);\n  //         }\n  //     })\n  // }\n\n\n  render() {\n    var items = this.state.items;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(History, {\n      className: \"table table-bordered table-striped custom-class\",\n      config: this.config,\n      records: items,\n      columns: this.columns,\n      onPageChange: this.pageChange.bind(this),\n      extraButtons: this.extraButtons,\n      loading: this.state.loading,\n      onSort: this.customSort,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default DashHistory;","map":{"version":3,"names":["React","Component","Fragment","History","orderBy","SweetAlert","getDastTask","getDastReport","tokenName","STATUS","errorNoti","detail","adminLayout","detailDast","Link","Loader","DashHistory","constructor","props","state","loading","items","showAlert","statusPopup","idAlert","users","responseDetail","deleteRecord","bind","downloadDastReport","columns","key","text","className","align","sortable","width","cell","record","status","id","window","location","href","RUNNING","ShowAlert","setState","config","key_column","page_size","length_menu","filename","no_data_text","language","filter","info","pagination","first","previous","next","last","show_length_menu","show_filter","show_pagination","show_info","extraButtons","title","children","componentDidMount","token","localStorage","getItem","then","res","timer","setTimeout","data","componentDidUpdate","clearInterval","length","i","splice","pageChange","pageData","console","log","customSort","column","records","sortOrder","exportedFilename","downloadLink","document","createElement","setAttribute","download_link","download","click","remove","catch","err","response","Promise","reject","render"],"sources":["D:/Workspace/ci-tools-master/frontend/src/components/Dast/DashHistory.jsx"],"sourcesContent":["import React, {Component, Fragment} from 'react';\nimport History from './History/History';\nimport {orderBy} from 'lodash';\nimport SweetAlert from 'sweetalert-react';\nimport '../../assets/css/sweetalert.css';\nimport {getDastTask, getDastReport} from \"../../api\"\nimport {tokenName} from \"../../api/const\";\nimport { STATUS } from '../../api/const'\nimport {errorNoti} from \"../Notifi\";\nimport {detail, adminLayout, detailDast} from \"../../config\";\nimport {Link} from \"react-router-dom\";\nimport Loader from 'react-loader-spinner'\n\nclass DashHistory extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            items: [],\n            showAlert: false,\n            statusPopup: false,\n            idAlert: '',\n            users: [],\n            responseDetail: [],\n        };\n\n        this.deleteRecord = this.deleteRecord.bind(this);\n        this.downloadDastReport = this.downloadDastReport.bind(this);\n        this.columns = [\n            {\n                key: \"target_url\",\n                text: \"Website URL\",\n                className: \"target_url\",\n                align: \"left\",\n                sortable: true,\n                width: 200,\n            },\n            {\n                key: \"target_type\",\n                text: \"Scan Target\",\n                className: \"scan_target\",\n                align: \"left\",\n                sortable: true,\n                width: 100,\n            },\n            {\n                key: \"scan_type\",\n                text: \"Scan Type\",\n                className: \"scan_type\",\n                align: \"left\",\n                sortable: true,\n                width: 150,\n            },\n            {\n                key: \"created_at\",\n                text: \"Start Time\",\n                className: \"created_at\",\n                sortable: true,\n                width: 150\n            },\n            {\n                key: \"status\",\n                text: \"Status\",\n                className: \"status\",\n                width: 100,\n                align: \"center\",\n                sortable: true,\n                cell: record => {\n                    return (\n                        <div>\n                            {\n                                {\n                                    'PENDING': <div>\n                                                    <i class=\"fa fa-stop-circle pending-status\"></i>\n                                                    <span class=\"pending-status\">{record.status}</span>\n                                                </div>,\n                                    'RUNNING': <div>\n                                                    <i class=\"fa fa-hourglass-half running-status\"></i>\n                                                    <span class=\"running-status\">{record.status}</span>\n                                                </div>,\n                                    'COMPLETED': <div>\n                                                    <i class=\"fa fa-check-circle complete-status\"></i>\n                                                    <span class=\"complete-status\">{record.status}</span>\n                                                </div>,\n                                    'ERROR': <div>\n                                                <i class=\"fa fa-exclamation-circle error-status\"></i>\n                                                <span class=\"error-status\">{record.status}</span>\n                                            </div>,\n                                } [record.status]\n                            }\n                        </div>\n                    )\n                }\n            },\n            {\n                key: \"report\",\n                text: \"Report\",\n                className: \"report\",\n                sortable: true,\n                align: \"center\",\n                width: 100,\n                cell: record => {\n                    return (\n                        <div>\n                            {(record.status ===\"COMPLETED\" ) ? (\n                                <div>\n                                    <Link to={`${adminLayout+detailDast}/${record.id}`}>\n                                        <button className=\"btn btn-fill btn btn-info btn-sm\"\n                                                onClick={() => window.location.href= `${adminLayout+detailDast}/${record.id}` }\n                                        >\n                                            Show Detail\n                                        </button>\n                                    </Link>\n                                </div>\n                                ) : ( record.status === STATUS.RUNNING &&\n                                    <Loader type=\"ThreeDots\" color=\"#00C6E7\" height={20} width={50}/>\n                                )\n                            }\n                        </div>\n                    )\n                }\n            },\n            {\n                key: \"report\",\n                text: \"HTML report\",\n                className: \"report\",\n                sortable: true,\n                width: 100,\n                align: \"center\",\n                cell: record => {\n                    return (\n                        <div>\n                            {(record.status ===\"COMPLETED\" ) ? (\n                                <div>\n                                    <button className=\"btn btn-fill btn btn-info btn-sm\"\n                                            onClick={() => this.downloadDastReport(record.id)}\n                                    >\n                                    Download\n                                    </button>\n                                </div>\n                                ) : ( record.status === STATUS.RUNNING &&\n                                    <Loader type=\"ThreeDots\" color=\"#00C6E7\" height={20} width={50}/>\n                                )\n                            }\n                        </div>\n                    )\n                }\n            },\n            {\n                key: \"action\",\n                text: \"Action\",\n                className: \"action\",\n                width: 50,\n                align: \"center\",\n                sortable: false,\n                cell: record => {\n                    return (\n                        <Fragment>\n                            <button className=\"btn btn-danger btn-sm\" onClick={() => this.ShowAlert(record)}>\n                                <i className=\"glyphicon glyphicon-trash fa fa-trash\"></i>\n                            </button>\n                            <SweetAlert\n                                show={this.state.showAlert}\n                                title=\"Delete Record?\"\n                                text=\"You cannot undo this action\"\n                                showCancelButton\n                                onOutsideClick={() => this.setState({showAlert: false})}\n                                onEscapeKey={() => this.setState({showAlert: false})}\n                                onCancel={() => this.setState({showAlert: false})}\n                                onConfirm={() => this.deleteRecord()}\n                            />\n                        </Fragment>\n                    );\n                }\n            }\n        ];\n        this.config = {\n            key_column: 'id',\n            page_size: 10,\n            length_menu: [10, 20, 50],\n            filename: \"Records\",\n            no_data_text: 'No data available!',\n            language: {\n                length_menu: \"Show _MENU_ result per page\",\n                filter: \"Filter in records...\",\n                info: \"Showing _START_ to _END_ of _TOTAL_ records\",\n                pagination: {\n                    first: \"First\",\n                    previous: <span>&#9668;</span>,\n                    next: <span>&#9658;</span>,\n                    last: \"Last\"\n                }\n            },\n            pagination: \"basic\", //advance\n            show_length_menu: true,\n            show_filter: true,\n            show_pagination: true,\n            show_info: true,\n        };\n\n        this.extraButtons = [\n            {\n                className: \"btn btn-primary buttons-pdf\",\n                title: \"Export TEst\",\n                children: [\n                    <span>\n                    <i className=\"glyphicon glyphicon-print fa fa-print\" aria-hidden=\"true\"></i>\n                  </span>\n                ],\n            },\n            {\n                className: \"btn btn-primary buttons-pdf\",\n                title: \"Export TEst\",\n                children: [\n                    <span>\n                    <i className=\"glyphicon glyphicon-print fa fa-print\" aria-hidden=\"true\"></i>\n                  </span>\n                ],\n            },\n        ]\n    }\n\n    // load data the first time\n    componentDidMount() {\n        const token = localStorage.getItem(tokenName);\n        getDastTask(token, 'GET', null).then(res => {\n            this.timer = setTimeout(() => { this.setState({\n                loading: false,\n                items: res.data\n            })\n            }, 1000);\n\n        });\n    }\n\n   // Update data response continuously\n    componentDidUpdate() {\n        const token = localStorage.getItem(tokenName);\n        getDastTask(token, 'GET', null).then(res => {\n            setTimeout(() => {\n                this.setState({\n                    loading: false,\n                    items: res.data\n                })\n            }, 3000);\n        });\n        clearInterval(this.timer)\n    }\n\n    //Show alert when delete record\n    ShowAlert(record) {\n        this.setState({\n            showAlert: true,\n            idAlert: record.id\n        });\n    }\n\n    //Delete record\n    deleteRecord() {\n        let {idAlert, items} = this.state;\n        const token = localStorage.getItem(tokenName);\n        getDastTask(token, 'DELETE', null, `/${idAlert}`).then(res => {\n            if (res.status === 204) {\n                if (items.length > 0) {\n                    for (let i = 0; i < items.length; i++) {\n                        if (items[i].id === idAlert) {\n                            items.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n            this.setState({\n                showAlert: false\n            });\n        });\n\n    }\n\n    pageChange(pageData) {\n        console.log(\"OnPageChange\", pageData);\n    }\n\n    customSort(column, records, sortOrder) {\n        return orderBy(records, [column], [sortOrder]);\n    }\n\n\n    // Download Report from S3\n    // const downloadDastReport  = () => {\n    downloadDastReport (id) {\n        const token = localStorage.getItem(tokenName);\n        console.log ('downloadDastReport');\n        console.log (id); \n        getDastReport(token, 'GET', null, id).then(res => {\n            if (res.status === 200) {\n                let exportedFilename = 'detail' + '.csv' || 'export.csv';\n                let downloadLink = document.createElement(\"a\");\n                // Create a link to the file\n                downloadLink.setAttribute('href', res.data.download_link);\n                // Setting the file name\n                downloadLink.download = exportedFilename;\n                //triggering the function\n                downloadLink.click();\n                downloadLink.remove();\n            }\n        }).catch(err => {\n            if (err.response.status === 401) {\n                window.location = '/login';\n            }else {\n                return Promise.reject(err);\n            }\n        })\n    }\n\n    // getDownloadDashFileLink (id) {\n    //     const token = localStorage.getItem(tokenName);\n    //     console.log ('getDownloadDashFileLink');\n    //     console.log (id);\n    //     getDastReport(token, 'GET', null, id).then(res => {\n    //         if (res.status === 200) {\n    //             let exportedFilename = 'detail' + '.csv' || 'export.csv';\n    //             let downloadLink = document.createElement(\"a\");\n    //             // Create a link to the file\n    //             downloadLink.setAttribute('href', res.data.download_link);\n    //             downloadLink.setAttribute('target', \"_blank\");\n    //             // Setting the file name\n    //             //downloadLink.download = exportedFilename;\n    //             //triggering the function\n    //             console.log (downloadLink);\n    //             downloadLink.click();\n    //             downloadLink.remove();\n    //         }\n    //     }).catch(err => {\n    //         if (err.response.status === 401) {\n    //             window.location = '/login';\n    //         }else {\n    //             return Promise.reject(err);\n    //         }\n    //     })\n    // }\n\n    render() {\n        var {items} = this.state;\n        return (\n            <div>\n                <History\n                    className=\"table table-bordered table-striped custom-class\"\n                    config={this.config}\n                    records={items}\n                    columns={this.columns}\n                    onPageChange={this.pageChange.bind(this)}\n                    extraButtons={this.extraButtons}\n                    loading={this.state.loading}\n                    onSort={this.customSort}\n                />\n            </div>\n        )\n    }\n}\n\nexport default DashHistory;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
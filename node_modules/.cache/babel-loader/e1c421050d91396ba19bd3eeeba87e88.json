{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\ci-tools-master\\\\frontend\\\\src\\\\components\\\\Style\\\\Detail\\\\DetailHistory.jsx\";\nimport React, { Component } from \"react\";\nimport ReactDOMServer from 'react-dom/server';\nimport _ from 'lodash';\nimport '../../../assets/css/style.css';\nimport TableHeader from \"../History/TableHeader\";\nimport TableFooter from \"../History/TableFooter\";\nimport style from '../History/style';\nimport LanguageStatistics from \"./LanguageStatistics\";\nimport { FaPen } from 'react-icons/fa';\nimport { Button } from \"react-bootstrap\";\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport Modal from \"react-bootstrap/lib/Modal\";\nimport ContentMemo from \"./ContentMemo\";\n\nclass DetailHistory extends Component {\n  constructor(props) {\n    super(props); // this.exportExcelRef = React.createRef();\n\n    this.changeStatus = () => {\n      this.setState({\n        statusPopup: !this.state.statusPopup\n      });\n    };\n\n    this.changeMemo = (event, record) => {\n      this.setState({\n        openMemo: !this.state.openMemo,\n        contentMemo: record.note,\n        idMemo: record.id\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        openMemo: false\n      });\n    };\n\n    this.sortColumn = this.sortColumn.bind(this);\n    this.numPages = this.numPages.bind(this);\n    this.exportToExcel = this.exportToExcel.bind(this);\n    this.exportToPDF = this.exportToPDF.bind(this);\n    this.exportToCSV = this.exportToCSV.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.filterRecords = this.filterRecords.bind(this);\n    this.filterData = this.filterData.bind(this);\n    this.sortRecords = this.sortRecords.bind(this);\n    this.config = {\n      button: {\n        excel: props.config && props.config.button && props.config.button.excel ? props.config.button.excel : false,\n        print: props.config && props.config.button && props.config.button.print ? props.config.button.print : false,\n        csv: props.config && props.config.button && props.config.button.csv ? props.config.button.csv : false,\n        extra: props.config && props.config.button && props.config.button.extra ? props.config.button.extra : false\n      },\n      filename: props.config && props.config.filename ? props.config.filename : \"table\",\n      key_column: props.config && props.config.key_column ? props.config.key_column : \"id\",\n      language: {\n        length_menu: props.config && props.config.language && props.config.language.length_menu ? props.config.language.length_menu : \"Show _MENU_ records per page\",\n        filter: props.config && props.config.language && props.config.language.filter ? props.config.language.filter : \"Search in records...\",\n        info: props.config && props.config.language && props.config.language.info ? props.config.language.info : \"Showing _START_ to _END_ of _TOTAL_ entries\",\n        pagination: {\n          first: props.config && props.config.language && props.config.language.pagination && props.config.language.pagination.first ? props.config.language.pagination.first : \"First\",\n          previous: props.config && props.config.language && props.config.language.pagination && props.config.language.pagination.previous ? props.config.language.pagination.previous : \"Previous\",\n          next: props.config && props.config.language && props.config.language.pagination && props.config.language.pagination.next ? props.config.language.pagination.next : \"Next\",\n          last: props.config && props.config.language && props.config.language.pagination && props.config.language.pagination.last ? props.config.language.pagination.last : \"Last\"\n        },\n        no_data_text: props.config && props.config.language && props.config.language.no_data_text ? props.config.language.no_data_text : 'No rows found',\n        loading_text: props.config && props.config.language && props.config.language.loading_text ? props.config.language.loading_text : \"Loading...\"\n      },\n      length_menu: props.config && props.config.length_menu ? props.config.length_menu : [10, 25, 50, 75, 100],\n      show_length_menu: props.config.show_length_menu !== undefined ? props.config.show_length_menu : true,\n      show_filter: props.config.show_filter !== undefined ? props.config.show_filter : true,\n      show_pagination: props.config.show_pagination !== undefined ? props.config.show_pagination : true,\n      show_info: props.config.show_info !== undefined ? props.config.show_info : true,\n      show_first: props.config.show_first !== undefined ? props.config.show_first : true,\n      show_last: props.config.show_last !== undefined ? props.config.show_last : true,\n      pagination: props.config.pagination ? props.config.pagination : 'basic'\n    };\n    this.state = {\n      is_temp_page: false,\n      filter_value: \"\",\n      page_size: props.config.page_size ? props.config.page_size : 10,\n      page_number: 1,\n      sort: props.config && props.config.sort ? props.config.sort : false,\n      openMemo: false,\n      contentMemo: '',\n      idMemo: '' // responseDetail : props.responseDetail\n\n    };\n  }\n\n  filterRecords(e) {\n    let value = e.target.value;\n    this.setState({\n      page_number: 1,\n      filter_value: value\n    }, () => {\n      this.onChange();\n    });\n  }\n\n  changePageSize(e) {\n    let value = e.target.value;\n    this.setState({\n      page_size: value\n    }, () => {\n      this.onChange();\n    });\n  }\n\n  sortColumn(event, column, sortOrder) {\n    if (!column.sortable) return false;\n    let newSortOrder = sortOrder === \"asc\" ? \"desc\" : \"asc\";\n    this.setState({\n      'sort': {\n        column: column.key,\n        order: newSortOrder\n      }\n    }, () => {\n      this.onChange();\n    });\n  }\n\n  paginate(records) {\n    let page_size = this.state.page_size;\n    let page_number = this.state.page_number;\n    --page_number; // because pages logically start with 1, but technically with 0\n\n    return records.slice(page_number * page_size, (page_number + 1) * page_size);\n  }\n\n  numPages(totalRecord) {\n    return Math.ceil(totalRecord / this.state.page_size);\n  }\n\n  isLast() {\n    // because for empty records page_number will still be 1\n    if (this.pages === 0) {\n      return true;\n    }\n\n    if (this.state.page_number === this.pages) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isFirst() {\n    if (this.state.page_number === 1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  goToPage(e, pageNumber) {\n    e.preventDefault();\n\n    if (this.state.page_number === pageNumber) {\n      return;\n    }\n\n    let pageState = {\n      previous_page: this.state.page_number,\n      current_page: pageNumber\n    };\n    this.setState({\n      is_temp_page: false,\n      page_number: pageNumber\n    }, () => {\n      this.props.onPageChange(pageState);\n      this.onChange();\n    });\n  }\n\n  firstPage(e) {\n    e.preventDefault();\n    if (this.isFirst()) return;\n    this.goToPage(e, 1);\n  }\n\n  lastPage(e) {\n    e.preventDefault();\n    if (this.isLast()) return;\n    this.goToPage(e, this.pages);\n  }\n\n  previousPage(e) {\n    e.preventDefault();\n    if (this.isFirst()) return false;\n    this.goToPage(e, this.state.page_number - 1);\n  }\n\n  nextPage(e) {\n    e.preventDefault();\n    if (this.isLast()) return;\n    this.goToPage(e, parseInt(this.state.page_number) + 1);\n  }\n\n  onPageChange(e, isInputChange = false) {\n    if (isInputChange) {\n      this.setState({\n        is_temp_page: true,\n        temp_page_number: e.target.value\n      });\n    } else {\n      if (e.key === 'Enter') {\n        let pageNumber = e.target.value;\n        this.goToPage(e, pageNumber);\n      }\n    }\n  }\n\n  onPageBlur(e) {\n    let pageNumber = e.target.value;\n    this.goToPage(e, pageNumber);\n  }\n\n  strip(html) {\n    let doc = new DOMParser().parseFromString(html, 'text/html');\n    return doc.body.textContent || \"\";\n  }\n\n  getExportHtml() {\n    let tableHtml = \"<table>\";\n    tableHtml += \"<thead>\";\n    tableHtml += \"<tr>\";\n\n    for (let column of this.columns) {\n      tableHtml += \"<th>\" + column.text + \"</th>\";\n    }\n\n    tableHtml += \"</tr>\";\n    tableHtml += \"</thead>\";\n    tableHtml += \"<tbody>\"; // Filter records before export\n\n    let filterRecords = this.props.records;\n\n    if (this.props.dynamic === false) {\n      let records = this.sortRecords(),\n          filterValue = this.state.filter_value;\n      filterRecords = records;\n\n      if (filterValue) {\n        filterRecords = this.filterData(records);\n      }\n    }\n\n    for (let i in filterRecords) {\n      let record = filterRecords[i];\n      tableHtml += \"<tr>\";\n\n      for (let column of this.columns) {\n        if (column.cell && typeof column.cell === \"function\") {\n          let cellData = ReactDOMServer.renderToStaticMarkup(column.cell(record, i));\n          cellData = this.strip(cellData);\n          tableHtml += \"<td>\" + cellData + \"</td>\";\n        } else if (record[column.key]) {\n          tableHtml += \"<td>\" + record[column.key] + \"</td>\";\n        } else {\n          tableHtml += \"<td></td>\";\n        }\n      }\n\n      tableHtml += \"</tr>\";\n    }\n\n    tableHtml += \"</tbody>\";\n    tableHtml += \"</table>\";\n    return tableHtml;\n  }\n\n  exportToExcel() {\n    let filterRecords = this.props.data.results;\n\n    if (this.props.dynamic === false) {\n      let records = this.sortRecords(),\n          filterValue = this.state.filter_value;\n      filterRecords = records;\n\n      if (filterValue) {\n        filterRecords = this.filterData(records);\n      }\n    }\n\n    let filterData = [];\n    filterRecords.map((index, key) => {\n      filterData[key] = {\n        severity: index.severity,\n        target: index.note === \"\" ? 'no' : 'yes',\n        memo: index.note.replace(/(?:\\r\\n|\\r|\\n)/g, \" | \"),\n        link: index.link,\n        location_file: index.file_path,\n        line: index.start_line,\n        nameJa: '',\n        name: index.description,\n        id: index.id,\n        message: '',\n        description: index.description,\n        cve: ''\n      };\n    });\n    let fixData = [];\n    let totalHight = 0;\n    let totalMedium = 0;\n    let totalLow = 0;\n    let totalCritical = 0;\n    this.props.data.results.map((item, key) => {\n      if (item.severity === \"Low\" || item.severity === \"Unknown\" || item.severity === \"Everything else\") {\n        totalLow += 1;\n      }\n\n      if (item.severity === \"High\") {\n        totalHight += 1;\n      }\n\n      if (item.severity === \"Medium\") {\n        totalMedium += 1;\n      }\n\n      if (item.severity === \"Critical\") {\n        totalCritical += 1;\n      }\n    });\n    fixData[0] = {\n      col1: 'SAST result data Summary',\n      col2: '',\n      col3: '',\n      col4: '',\n      col5: ''\n    };\n    fixData[1] = {\n      col1: '',\n      col2: '',\n      col3: '',\n      col4: '',\n      col5: ''\n    };\n    fixData[2] = {\n      col1: 'SCANNER',\n      col2: 'phpcs-security-audit v2',\n      col3: '',\n      col4: '',\n      col5: ''\n    };\n    fixData[3] = {\n      col1: 'SCANNER VERSION',\n      col2: '2.0.1',\n      col3: '',\n      col4: '',\n      col5: ''\n    };\n    fixData[4] = {\n      col1: 'START DATE',\n      col2: this.props.data.created_at,\n      col3: '',\n      col4: '',\n      col5: ''\n    };\n    fixData[5] = {\n      col1: 'END DATE',\n      col2: this.props.data.updated_at,\n      col3: '',\n      col4: '',\n      col5: ''\n    };\n    fixData[6] = {\n      col1: 'SCAN STATUS',\n      col2: 'success',\n      col3: '',\n      col4: '',\n      col5: ''\n    };\n    fixData[7] = {\n      col1: '',\n      col2: '',\n      col3: '',\n      col4: '',\n      col5: ''\n    };\n    fixData[8] = {\n      col1: 'Git base URL',\n      col2: this.props.dataGit,\n      col3: '',\n      col4: '',\n      col5: ''\n    };\n    fixData[9] = {\n      col1: 'Git branch',\n      col2: this.props.dataBranch,\n      col3: '',\n      col4: '',\n      col5: ''\n    };\n    fixData[10] = {\n      col1: '',\n      col2: '',\n      col3: '',\n      col4: '',\n      col5: ''\n    };\n    fixData[11] = {\n      col1: 'Results',\n      col2: 'Total',\n      col3: 'CRITICAL',\n      col4: 'HIGH',\n      col5: 'MID',\n      col6: 'LOW'\n    };\n    fixData[12] = {\n      col1: '-- all',\n      col2: this.props.data.results.length,\n      col3: totalCritical,\n      col4: totalHight,\n      col5: totalMedium,\n      col6: totalLow\n    };\n    fixData[13] = {\n      col1: '-- target',\n      col2: '',\n      col3: '',\n      col4: '',\n      col5: '',\n      col6: ''\n    };\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const fileExtension = '.xlsx';\n    const ws = XLSX.utils.json_to_sheet(filterData);\n    const w1 = XLSX.utils.json_to_sheet(fixData, {\n      skipHeader: true\n    });\n    const wb = {\n      Sheets: {\n        'Summary': w1,\n        'Vulnerabilities': ws\n      },\n      SheetNames: ['Summary', 'Vulnerabilities']\n    };\n    const excelBuffer = XLSX.write(wb, {\n      bookType: 'xlsx',\n      type: 'array'\n    });\n    const data = new Blob([excelBuffer], {\n      type: fileType\n    });\n    let currentTime = new Date();\n    const currentDate = String(currentTime.getDate()).padStart(2, '0');\n    const currentMonth = String(currentTime.getMonth() + 1).padStart(2, '0');\n    const currentYear = currentTime.getFullYear();\n    const nameProject = this.props.dataGit.slice(this.props.dataGit.lastIndexOf(\"/\") + 1);\n    const nameFile = \"\".concat(this.props.data.language, \"_SAST_\").concat(nameProject, \"_\").concat(currentMonth, \"_\").concat(currentDate, \"_\").concat(currentYear);\n    FileSaver.saveAs(data, nameFile + fileExtension);\n  }\n\n  exportToPDF() {\n    let tableHtml = this.getExportHtml();\n    let style = \"<style>\";\n    style = style + \"table {width: 100%;font: 17px Calibri;}\";\n    style = style + \"table, th, td {border: solid 1px #DDD; border-collapse: collapse;\";\n    style = style + \"padding: 2px 3px;text-align:left;}\";\n    style = style + \"</style>\";\n    let win = window.open('', '_blank');\n    let currentTime = new Date();\n    const currentDate = String(currentTime.getDate()).padStart(2, '0');\n    const currentMonth = String(currentTime.getMonth() + 1).padStart(2, '0');\n    const currentYear = currentTime.getFullYear();\n    const nameProject = this.props.dataGit.slice(this.props.dataGit.lastIndexOf(\"/\") + 1);\n    const nameFile = \"\".concat(this.props.data.language, \"_SAST_\").concat(nameProject, \"_\").concat(currentMonth, \"_\").concat(currentDate, \"_\").concat(currentYear);\n    win.document.write('<html><head>');\n    win.document.write('<title>' + nameFile + '</title>');\n    win.document.write(style);\n    win.document.write('</head>');\n    win.document.write('<body>');\n    win.document.write('<h1>' + this.config.filename + '</h1>');\n    win.document.write(tableHtml);\n    win.document.write('</body></html>');\n    win.print();\n    win.close();\n  }\n\n  convertToCSV(objArray) {\n    let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\n    let str = '';\n\n    for (let i = 0; i < array.length; i++) {\n      let line = '';\n\n      for (let index in array[i]) {\n        if (line !== '') line += ',';\n        line += array[i][index];\n      }\n\n      str += line + '\\r\\n';\n    }\n\n    return str;\n  }\n\n  exportToCSV() {\n    let headers = {}; // add columns in sheet array\n\n    for (let column of this.columns) {\n      headers[column.key] = '\"' + column.text + '\"';\n    } // Filter records before export\n    // let filterRecords = this.props.records;\n\n\n    let filterRecords = this.props.data.results;\n\n    if (this.props.dynamic === false) {\n      let records = this.sortRecords(),\n          filterValue = this.state.filter_value;\n      filterRecords = records;\n\n      if (filterValue) {\n        filterRecords = this.filterData(records);\n      }\n    }\n\n    let records = []; // add data rows in sheet array\n\n    for (let i in filterRecords) {\n      let record = filterRecords[i],\n          newRecord = {};\n\n      for (let column of this.columns) {\n        if (column.cell && typeof column.cell === \"function\") {\n          let cellData = ReactDOMServer.renderToStaticMarkup(column.cell(record, i));\n          cellData = this.strip(cellData);\n          cellData = cellData.replace(/(?:\\r\\n|\\r|\\n)/g, \" | \");\n          cellData = cellData.replace(/\"/g, \"'\");\n          cellData = '\"' + cellData + '\"';\n          newRecord[column.key] = cellData;\n        } else if (record[column.key]) {\n          let colValue = record[column.key];\n          colValue = typeof colValue === \"string\" ? colValue.replace(/\"/g, '\"\"') : colValue;\n          newRecord[column.key] = '\"' + colValue + '\"';\n        } else {\n          newRecord[column.key] = \"\";\n        }\n      }\n\n      records.push(newRecord);\n    }\n\n    if (headers) {\n      records.unshift(headers);\n    } // Convert Object to JSON\n\n\n    let jsonObject = JSON.stringify(records);\n    let csv = this.convertToCSV(jsonObject);\n    let currentTime = new Date();\n    const currentDate = String(currentTime.getDate()).padStart(2, '0');\n    const currentMonth = String(currentTime.getMonth() + 1).padStart(2, '0');\n    const currentYear = currentTime.getFullYear();\n    const nameProject = this.props.dataGit.slice(this.props.dataGit.lastIndexOf(\"/\") + 1);\n    const nameFile = \"\".concat(this.props.data.language, \"_SAST_\").concat(nameProject, \"_\").concat(currentMonth, \"_\").concat(currentDate, \"_\").concat(currentYear);\n    let exportedFilename = nameFile + '.csv' || 'export.csv';\n    let blob = new Blob([csv], {\n      type: 'text/csv;charset=utf-8;'\n    });\n\n    if (navigator.msSaveBlob) {\n      // IE 10+\n      navigator.msSaveBlob(blob, exportedFilename);\n    } else {\n      let link = document.createElement(\"a\");\n\n      if (link.download !== undefined) {\n        // feature detection\n        // Browsers that support HTML5 download attribute\n        let url = URL.createObjectURL(blob);\n        link.setAttribute(\"href\", url);\n        link.setAttribute(\"download\", exportedFilename);\n        link.style.visibility = 'hidden';\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n      }\n    }\n  }\n\n  onChange() {\n    let tableData = {\n      filter_value: this.state.filter_value,\n      page_number: this.state.page_number,\n      page_size: this.state.page_size,\n      sort_order: this.state.sort\n    };\n    this.props.onChange(tableData);\n  }\n\n  filterData(records) {\n    let filterValue = this.state.filter_value;\n    return records.filter(record => {\n      let allow = false;\n\n      _.each(this.columns, (column, key) => {\n        if (record[column.key]) {\n          allow = _.includes(record[column.key].toString().toLowerCase(), filterValue.toString().toLowerCase()) ? true : allow;\n        }\n      });\n\n      return allow;\n    });\n  }\n\n  sortRecords() {\n    if (this.state.sort.oder) {\n      return _.orderBy(this.props.records, o => {\n        let colVal = o[this.state.sort.column];\n        let typeofColVal = typeof colVal;\n\n        if (typeofColVal === \"string\") {\n          if (isNaN(colVal)) {\n            return String(colVal.toLowerCase());\n          } else {\n            return Number(colVal);\n          }\n        } else if (typeofColVal === \"number\") {\n          return Number(colVal);\n        }\n      }, [this.state.sort.order]);\n    } else {\n      return this.props.data.results; // this.props.data.results\n    }\n  }\n\n  render() {\n    this.props.data.results.map((item, index) => {\n      this.props.data.results[index].run_type = this.props.runType;\n      this.props.data.results[index].timestamp = this.props.data.updated_at;\n    });\n    let filterRecords, totalRecords, pages, isFirst, isLast;\n\n    if (this.props.dynamic === false) {\n      let records = this.props.onSort ? this.props.onSort(this.state.sort.column, this.props.data.results, this.state.sort.order) : this.sortRecords(),\n          filterValue = this.state.filter_value;\n      filterRecords = records;\n\n      if (filterValue) {\n        filterRecords = this.filterData(records);\n      }\n\n      totalRecords = Array.isArray(filterRecords) ? filterRecords.length : 0;\n      pages = this.pages = this.numPages(totalRecords);\n      isFirst = this.isFirst();\n      isLast = this.isLast();\n      filterRecords = Array.isArray(filterRecords) ? this.paginate(filterRecords) : [];\n    } else {\n      filterRecords = this.props.records;\n      totalRecords = this.props.total_record;\n      pages = this.pages = this.numPages(totalRecords);\n      isFirst = this.isFirst();\n      isLast = this.isLast();\n    } // filterRecords = this.props.records;\n\n\n    let startRecords = this.state.page_number * this.state.page_size - (this.state.page_size - 1);\n    let endRecords = this.state.page_size * this.state.page_number;\n    endRecords = endRecords > totalRecords ? totalRecords : endRecords;\n    let lengthMenuText = this.config.language.length_menu;\n    lengthMenuText = lengthMenuText.split('_MENU_');\n    let paginationInfo = this.config.language.info;\n    paginationInfo = paginationInfo.replace('_START_', this.state.page_number === 1 ? 1 : startRecords);\n    paginationInfo = paginationInfo.replace('_END_', endRecords);\n    paginationInfo = paginationInfo.replace('_TOTAL_', totalRecords);\n    this.columns = [{\n      key: \"description\",\n      text: \"description\",\n      className: \"description\",\n      align: \"center\",\n      width: 200,\n      sortable: true,\n      cell: record => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"fix-width-des\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 17\n          }\n        }, record.description));\n      }\n    }, {\n      key: \"severity\",\n      text: \"severity\",\n      className: \"severity\",\n      align: \"center\",\n      width: 80,\n      sortable: true,\n      cell: record => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"fix-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 17\n          }\n        }, record.severity));\n      }\n    }, {\n      key: \"file_path\",\n      text: \"file path\",\n      className: \"file_path\",\n      align: \"center\",\n      width: 200,\n      sortable: true,\n      cell: record => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"fix-width-location\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 17\n          }\n        }, record.file_path));\n      }\n    }, {\n      key: \"start_line\",\n      text: \"start line\",\n      className: \"start_line\",\n      align: \"center\",\n      width: 50,\n      sortable: true,\n      cell: record => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"fix-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 17\n          }\n        }, record.start_line));\n      }\n    }, {\n      key: \"link\",\n      text: \"link\",\n      className: \"link\",\n      align: \"center\",\n      width: 100,\n      sortable: true,\n      cell: record => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"fix-width-location\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: record.link,\n          target: \"_blank\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 19\n          }\n        }, record.link)));\n      }\n    }, {\n      key: \"note\",\n      text: \"memo\",\n      className: \"note\",\n      align: \"left\",\n      width: 100,\n      sortable: true,\n      cell: record => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"fix-width-location\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 17\n          }\n        }, record.note), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          variant: \"info\",\n          size: \"sm\",\n          className: \"btn btn-primary btn-sm pull-right\",\n          id: record.id,\n          onClick: event => this.changeMemo(event, record),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(FaPen, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 17\n          }\n        })));\n      }\n    }];\n    this.sortedCurrentValuesNew = [\"1\", \"2\", \"3\", \"4\"];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"as-react-table\",\n      id: this.props.id ? this.props.id + \"-container\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableHeader, {\n      config: this.config,\n      id: this.props.id,\n      lengthMenuText: lengthMenuText,\n      recordLength: this.props.dynamic ? this.props.total_record : this.props.records.length,\n      filterRecords: this.filterRecords.bind(this),\n      changePageSize: this.changePageSize.bind(this),\n      exportToExcel: this.exportToExcel.bind(this),\n      exportToCSV: this.exportToCSV.bind(this),\n      exportToPDF: this.exportToPDF.bind(this),\n      extraButtons: this.props.extraButtons,\n      updateAt: this.props.data.updated_at,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row table-body asrt-table-body\",\n      style: style.table_body,\n      id: this.props.id ? this.props.id + \"-table-body\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(LanguageStatistics, {\n      data: this.props.dataSubtask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      className: this.props.className,\n      id: this.props.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: this.props.tHeadClassName ? this.props.tHeadClassName : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 17\n      }\n    }, this.columns.map((column, index) => {\n      let classText = column.sortable ? \"sortable \" : \"\",\n          width = column.width ? column.width : \"\",\n          align = column.align ? column.align : \"\",\n          sortOrder = \"\";\n\n      if (column.sortable && this.state.sort.column === column.key) {\n        sortOrder = this.state.sort.order;\n        classText += sortOrder ? \" \" + sortOrder : \"\";\n      }\n\n      classText += \" text-\" + align;\n      if (column.TrOnlyClassName) classText += \" \" + column.TrOnlyClassName;\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: column.key ? column.key : column.text,\n        className: classText,\n        width: width,\n        onClick: event => this.sortColumn(event, column, sortOrder),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 31\n        }\n      }, column.text);\n    }))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 797,\n        columnNumber: 17\n      }\n    }, this.props.loading === true ? /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: this.columns.length,\n      className: \"asrt-td-loading\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 800,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"asrt-loading-textwrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 801,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"asrt-loading-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 25\n      }\n    }, this.config.language.loading_text)))) : filterRecords.length ? filterRecords.map((record, rowIndex) => {\n      rowIndex = _.indexOf(this.props.records, record);\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: record[this.config.key_column],\n        onClick: e => this.props.onRowClicked(e, record, rowIndex),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 31\n        }\n      }, this.columns.map((column, colIndex) => {\n        if (column.cell && typeof column.cell === \"function\") {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            className: column.className,\n            key: column.key ? column.key : column.text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 817,\n              columnNumber: 47\n            }\n          }, column.cell(record, rowIndex));\n        } else if (record[column.key]) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            className: column.className,\n            key: column.key ? column.key : column.text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 47\n            }\n          }, record[column.key]);\n        } else {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            className: column.className,\n            key: column.key ? column.key : column.text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 46\n            }\n          });\n        }\n      }));\n    }) : /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: this.columns.length,\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 31\n      }\n    }, this.config.language.no_data_text)))))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.openMemo,\n      onHide: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ContentMemo, {\n      idMemo: this.state.idMemo,\n      content: this.state.contentMemo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(TableFooter, {\n      config: this.config,\n      id: this.props.id,\n      isFirst: isFirst,\n      isLast: isLast,\n      paginationInfo: paginationInfo,\n      pages: pages,\n      page_number: this.state.page_number,\n      is_temp_page: this.state.is_temp_page,\n      temp_page_number: this.state.temp_page_number,\n      firstPage: this.firstPage.bind(this),\n      lastPage: this.lastPage.bind(this),\n      previousPage: this.previousPage.bind(this),\n      nextPage: this.nextPage.bind(this),\n      goToPage: this.goToPage.bind(this),\n      changePageSize: this.changePageSize.bind(this),\n      onPageChange: this.onPageChange.bind(this),\n      onPageBlur: this.onPageBlur.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n/**\n * Define component display name\n */\n\n\nDetailHistory.displayName = 'ReactDatatable';\n/**\n * Define defaultProps for this component\n */\n\nDetailHistory.defaultProps = {\n  id: \"as-react-datatable\",\n  className: \"table table-bordered table-striped\",\n  columns: [],\n  config: {\n    button: {\n      excel: true,\n      print: true,\n      csv: true\n    },\n    filename: \"table\",\n    key_column: \"id\",\n    language: {\n      length_menu: \"Show _MENU_ records per page\",\n      filter: \"Search in records...\",\n      info: \"Showing _START_ to _END_ of _TOTAL_ entries\",\n      pagination: {\n        first: \"First\",\n        previous: \"Previous\",\n        next: \"Next\",\n        last: \"Last\"\n      }\n    },\n    length_menu: [10, 25, 50, 75, 100],\n    no_data_text: \"No rows found\",\n    page_size: 10,\n    sort: {\n      column: \"test\",\n      order: \"asc\"\n    },\n    show_length_menu: true,\n    show_filter: true,\n    show_pagination: true,\n    show_info: true,\n    show_first: true,\n    show_last: true\n  },\n  dynamic: false,\n  records: [],\n  total_record: 0,\n  onChange: () => {},\n  onPageChange: () => {},\n  onRowClicked: () => {}\n};\nexport default DetailHistory;","map":{"version":3,"names":["React","Component","ReactDOMServer","_","TableHeader","TableFooter","style","LanguageStatistics","FaPen","Button","FileSaver","XLSX","Modal","ContentMemo","DetailHistory","constructor","props","changeStatus","setState","statusPopup","state","changeMemo","event","record","openMemo","contentMemo","note","idMemo","id","handleClose","sortColumn","bind","numPages","exportToExcel","exportToPDF","exportToCSV","onChange","filterRecords","filterData","sortRecords","config","button","excel","print","csv","extra","filename","key_column","language","length_menu","filter","info","pagination","first","previous","next","last","no_data_text","loading_text","show_length_menu","undefined","show_filter","show_pagination","show_info","show_first","show_last","is_temp_page","filter_value","page_size","page_number","sort","e","value","target","changePageSize","column","sortOrder","sortable","newSortOrder","key","order","paginate","records","slice","totalRecord","Math","ceil","isLast","pages","isFirst","goToPage","pageNumber","preventDefault","pageState","previous_page","current_page","onPageChange","firstPage","lastPage","previousPage","nextPage","parseInt","isInputChange","temp_page_number","onPageBlur","strip","html","doc","DOMParser","parseFromString","body","textContent","getExportHtml","tableHtml","columns","text","dynamic","filterValue","i","cell","cellData","renderToStaticMarkup","data","results","map","index","severity","memo","replace","link","location_file","file_path","line","start_line","nameJa","name","description","message","cve","fixData","totalHight","totalMedium","totalLow","totalCritical","item","col1","col2","col3","col4","col5","created_at","updated_at","dataGit","dataBranch","col6","length","fileType","fileExtension","ws","utils","json_to_sheet","w1","skipHeader","wb","Sheets","SheetNames","excelBuffer","write","bookType","type","Blob","currentTime","Date","currentDate","String","getDate","padStart","currentMonth","getMonth","currentYear","getFullYear","nameProject","lastIndexOf","nameFile","saveAs","win","window","open","document","close","convertToCSV","objArray","array","JSON","parse","str","headers","newRecord","colValue","push","unshift","jsonObject","stringify","exportedFilename","blob","navigator","msSaveBlob","createElement","download","url","URL","createObjectURL","setAttribute","visibility","appendChild","click","remove","tableData","sort_order","allow","each","includes","toString","toLowerCase","oder","orderBy","o","colVal","typeofColVal","isNaN","Number","render","run_type","runType","timestamp","totalRecords","onSort","Array","isArray","total_record","startRecords","endRecords","lengthMenuText","split","paginationInfo","className","align","width","sortedCurrentValuesNew","extraButtons","table_body","dataSubtask","tHeadClassName","classText","TrOnlyClassName","loading","rowIndex","indexOf","onRowClicked","colIndex","displayName","defaultProps"],"sources":["D:/Workspace/ci-tools-master/frontend/src/components/Style/Detail/DetailHistory.jsx"],"sourcesContent":["import React, {Component} from \"react\";\nimport ReactDOMServer from 'react-dom/server';\nimport _ from 'lodash';\nimport '../../../assets/css/style.css';\n\nimport TableHeader from \"../History/TableHeader\";\nimport TableFooter from \"../History/TableFooter\";\nimport style from '../History/style';\nimport LanguageStatistics from \"./LanguageStatistics\";\nimport { FaPen } from 'react-icons/fa';\nimport { Button } from \"react-bootstrap\";\nimport * as FileSaver from 'file-saver'\nimport * as XLSX from 'xlsx'\nimport Modal from \"react-bootstrap/lib/Modal\";\nimport ContentMemo from \"./ContentMemo\";\n\nclass DetailHistory extends Component {\n\n  constructor(props) {\n    super(props);\n    // this.exportExcelRef = React.createRef();\n    this.sortColumn = this.sortColumn.bind(this);\n    this.numPages = this.numPages.bind(this);\n    this.exportToExcel = this.exportToExcel.bind(this);\n    this.exportToPDF = this.exportToPDF.bind(this);\n    this.exportToCSV = this.exportToCSV.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.filterRecords = this.filterRecords.bind(this);\n    this.filterData = this.filterData.bind(this);\n    this.sortRecords = this.sortRecords.bind(this);\n    this.config = {\n      button: {\n        excel: (props.config && props.config.button && props.config.button.excel) ? props.config.button.excel : false,\n        print: (props.config && props.config.button && props.config.button.print) ? props.config.button.print : false,\n        csv: (props.config && props.config.button && props.config.button.csv) ? props.config.button.csv : false,\n        extra : (props.config && props.config.button && props.config.button.extra) ? props.config.button.extra : false,\n      },\n      filename: (props.config && props.config.filename) ? props.config.filename : \"table\",\n      key_column: props.config && props.config.key_column ? props.config.key_column : \"id\",\n      language: {\n        length_menu: (props.config && props.config.language && props.config.language.length_menu) ? props.config.language.length_menu : \"Show _MENU_ records per page\",\n        filter: (props.config && props.config.language && props.config.language.filter) ? props.config.language.filter : \"Search in records...\",\n        info: (props.config && props.config.language && props.config.language.info) ? props.config.language.info : \"Showing _START_ to _END_ of _TOTAL_ entries\",\n        pagination: {\n          first: (props.config && props.config.language && props.config.language.pagination && props.config.language.pagination.first) ? props.config.language.pagination.first : \"First\",\n          previous: (props.config && props.config.language && props.config.language.pagination && props.config.language.pagination.previous) ? props.config.language.pagination.previous : \"Previous\",\n          next: (props.config && props.config.language && props.config.language.pagination && props.config.language.pagination.next) ? props.config.language.pagination.next : \"Next\",\n          last: (props.config && props.config.language && props.config.language.pagination && props.config.language.pagination.last) ? props.config.language.pagination.last : \"Last\"\n        },\n        no_data_text: (props.config && props.config.language && props.config.language.no_data_text) ? props.config.language.no_data_text : 'No rows found',\n        loading_text: (props.config && props.config.language && props.config.language.loading_text) ? props.config.language.loading_text : \"Loading...\"\n      },\n      length_menu: (props.config && props.config.length_menu) ? props.config.length_menu : [10, 25, 50, 75, 100],\n      show_length_menu: (props.config.show_length_menu !== undefined) ? props.config.show_length_menu : true,\n      show_filter: (props.config.show_filter !== undefined) ? props.config.show_filter : true,\n      show_pagination: (props.config.show_pagination !== undefined) ? props.config.show_pagination : true,\n      show_info: (props.config.show_info !== undefined) ? props.config.show_info : true,\n      show_first: (props.config.show_first !== undefined) ? props.config.show_first : true,\n      show_last: (props.config.show_last !== undefined) ? props.config.show_last : true,\n      pagination: (props.config.pagination) ? props.config.pagination : 'basic'\n    };\n    this.state = {\n      is_temp_page: false,\n      filter_value: \"\",\n      page_size: (props.config.page_size) ? props.config.page_size : 10,\n      page_number: 1,\n      sort: (props.config && props.config.sort) ? props.config.sort : false,\n      openMemo : false,\n      contentMemo: '',\n      idMemo: ''\n      // responseDetail : props.responseDetail\n    };\n  }\n\n  filterRecords(e) {\n    let value = e.target.value;\n    this.setState({\n      page_number: 1,\n      filter_value: value\n    }, () => {\n      this.onChange();\n    });\n  }\n\n  changePageSize(e) {\n    let value = e.target.value;\n    this.setState({\n      page_size: value\n    }, () => {\n      this.onChange();\n    });\n  }\n\n  sortColumn(event, column, sortOrder) {\n    if (!column.sortable) return false;\n    let newSortOrder = (sortOrder === \"asc\") ? \"desc\" : \"asc\";\n    this.setState({\n      'sort': { column: column.key, order: newSortOrder }\n    }, () => {\n      this.onChange();\n    });\n  }\n\n  paginate(records) {\n    let page_size = this.state.page_size;\n    let page_number = this.state.page_number;\n    --page_number; // because pages logically start with 1, but technically with 0\n    return records.slice(page_number * page_size, (page_number + 1) * page_size);\n  }\n\n  numPages(totalRecord){\n    return Math.ceil(totalRecord / this.state.page_size);\n  }\n\n  isLast() {\n    // because for empty records page_number will still be 1\n    if(this.pages === 0){\n      return true;\n    }\n    if (this.state.page_number === this.pages) {\n      return true\n    } else {\n      return false;\n    }\n  }\n\n  isFirst() {\n    if (this.state.page_number === 1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  goToPage(e, pageNumber){\n    e.preventDefault();\n    if(this.state.page_number === pageNumber){\n      return;\n    }\n    let pageState = {\n      previous_page: this.state.page_number,\n      current_page: pageNumber\n    };\n    this.setState({\n      is_temp_page: false,\n      page_number: pageNumber\n    }, () => {\n      this.props.onPageChange(pageState);\n      this.onChange();\n    });\n  }\n\n  firstPage(e) {\n    e.preventDefault();\n    if(this.isFirst()) return;\n    this.goToPage(e, 1);\n  }\n\n  lastPage(e) {\n    e.preventDefault();\n    if(this.isLast()) return;\n    this.goToPage(e, this.pages);\n  }\n\n  previousPage(e) {\n    e.preventDefault();\n    if(this.isFirst()) return false;\n    this.goToPage(e, this.state.page_number - 1);\n  }\n\n  nextPage(e) {\n    e.preventDefault();\n    if(this.isLast()) return;\n    this.goToPage(e, parseInt(this.state.page_number) + 1);\n  }\n\n  onPageChange(e, isInputChange = false) {\n    if(isInputChange){\n      this.setState({\n        is_temp_page : true,\n        temp_page_number: e.target.value\n      });\n    } else {\n      if (e.key === 'Enter') {\n        let pageNumber = e.target.value;\n        this.goToPage(e, pageNumber);\n      }\n    }\n  }\n\n  onPageBlur(e){\n    let pageNumber = e.target.value;\n    this.goToPage(e, pageNumber);\n  }\n\n  strip(html){\n    let doc = new DOMParser().parseFromString(html, 'text/html');\n    return doc.body.textContent || \"\";\n  }\n\n  getExportHtml(){\n    let tableHtml = \"<table>\";\n    tableHtml += \"<thead>\";\n    tableHtml += \"<tr>\";\n    for (let column of this.columns) {\n      tableHtml += \"<th>\" + column.text + \"</th>\";\n    }\n    tableHtml += \"</tr>\";\n    tableHtml += \"</thead>\";\n    tableHtml += \"<tbody>\";\n\n    // Filter records before export\n    let filterRecords = this.props.records;\n    if(this.props.dynamic === false){\n      let records = this.sortRecords(),\n          filterValue = this.state.filter_value;\n      filterRecords = records;\n\n      if (filterValue) {\n        filterRecords = this.filterData(records);\n      }\n    }\n\n    for (let i in filterRecords) {\n      let record = filterRecords[i];\n      tableHtml += \"<tr>\";\n      for (let column of this.columns) {\n        if (column.cell && typeof column.cell === \"function\") {\n          let cellData =  ReactDOMServer.renderToStaticMarkup(column.cell(record, i));\n          cellData = this.strip(cellData);\n          tableHtml += \"<td>\" + cellData + \"</td>\";\n        }else if (record[column.key]) {\n          tableHtml += \"<td>\" + record[column.key] + \"</td>\";\n        } else {\n          tableHtml += \"<td></td>\";\n        }\n      }\n      tableHtml += \"</tr>\";\n    }\n    tableHtml += \"</tbody>\";\n    tableHtml += \"</table>\";\n\n    return tableHtml;\n  }\n\n  exportToExcel(){\n    let filterRecords = this.props.data.results;\n    if(this.props.dynamic === false) {\n      let records = this.sortRecords(),\n          filterValue = this.state.filter_value;\n      filterRecords = records;\n      if (filterValue) {\n        filterRecords = this.filterData(records);\n      }\n    }\n    let filterData = [];\n    filterRecords.map((index,key) => {\n      filterData[key] = {\n        severity: index.severity,\n        target:index.note === \"\"?'no':'yes',\n        memo: index.note.replace(/(?:\\r\\n|\\r|\\n)/g, \" | \"),\n        link: index.link,\n        location_file: index.file_path,\n        line: index.start_line,\n        nameJa:'',\n        name:index.description,\n        id:index.id,\n        message:'',\n        description: index.description,\n        cve:''\n      };\n    })\n\n    let fixData = [];\n    let totalHight = 0;\n    let totalMedium = 0;\n    let totalLow = 0;\n    let totalCritical = 0;\n    this.props.data.results.map((item,key)=>{\n      if(item.severity === \"Low\" || item.severity === \"Unknown\" || item.severity === \"Everything else\") {\n        totalLow += 1;\n      }\n      if(item.severity === \"High\") {\n        totalHight += 1;\n      }\n      if(item.severity === \"Medium\") {\n        totalMedium += 1;\n      }\n      if(item.severity === \"Critical\") {\n        totalCritical += 1;\n      }\n    })\n    fixData[0] = {\n      col1: 'SAST result data Summary',\n      col2: '',\n      col3: '',\n      col4: '',\n      col5: '',\n    }\n    fixData[1] = {\n      col1: '',\n      col2: '',\n      col3: '',\n      col4: '',\n      col5: '',\n    }\n    fixData[2] = {\n      col1: 'SCANNER',\n      col2: 'phpcs-security-audit v2',\n      col3: '',\n      col4: '',\n      col5: '',\n    }\n    fixData[3] = {\n      col1: 'SCANNER VERSION',\n      col2: '2.0.1',\n      col3: '',\n      col4: '',\n      col5: '',\n    }\n    fixData[4] = {\n      col1: 'START DATE',\n      col2: this.props.data.created_at,\n      col3: '',\n      col4: '',\n      col5: '',\n    }\n    fixData[5] = {\n      col1: 'END DATE',\n      col2: this.props.data.updated_at,\n      col3: '',\n      col4: '',\n      col5: '',\n    }\n    fixData[6] = {\n      col1: 'SCAN STATUS',\n      col2: 'success',\n      col3: '',\n      col4: '',\n      col5: '',\n    }\n    fixData[7] = {\n      col1: '',\n      col2: '',\n      col3: '',\n      col4: '',\n      col5: '',\n    }\n    fixData[8] = {\n      col1: 'Git base URL',\n      col2: this.props.dataGit,\n      col3: '',\n      col4: '',\n      col5: '',\n    }\n    fixData[9] = {\n      col1: 'Git branch',\n      col2: this.props.dataBranch,\n      col3: '',\n      col4: '',\n      col5: '',\n    }\n    fixData[10] = {\n      col1: '',\n      col2: '',\n      col3: '',\n      col4: '',\n      col5: '',\n    }\n    fixData[11] = {\n      col1: 'Results',\n      col2: 'Total',\n      col3: 'CRITICAL',\n      col4: 'HIGH',\n      col5: 'MID',\n      col6: 'LOW',\n    }\n    fixData[12] = {\n      col1: '-- all',\n      col2: this.props.data.results.length,\n      col3: totalCritical,\n      col4: totalHight,\n      col5: totalMedium,\n      col6: totalLow\n    }\n    fixData[13] = {\n      col1: '-- target',\n      col2: '',\n      col3: '',\n      col4: '',\n      col5: '',\n      col6: '',\n    }\n\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const fileExtension = '.xlsx';\n    const ws = XLSX.utils.json_to_sheet(filterData);\n    const w1 = XLSX.utils.json_to_sheet(fixData,{skipHeader: true});\n    const wb = { Sheets: { 'Summary': w1,'Vulnerabilities':ws }, SheetNames: ['Summary','Vulnerabilities'] };\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n    const data = new Blob([excelBuffer], {type: fileType});\n    let currentTime = new Date();\n    const currentDate = String(currentTime.getDate()).padStart(2, '0');\n    const currentMonth = String(currentTime.getMonth() + 1).padStart(2, '0');\n    const currentYear = currentTime.getFullYear();\n    const nameProject = this.props.dataGit.slice((this.props.dataGit.lastIndexOf(\"/\")) + 1)\n    const nameFile = `${this.props.data.language}_SAST_${nameProject}_${currentMonth}_${currentDate}_${currentYear}`;\n    FileSaver.saveAs(data, nameFile + fileExtension);\n  }\n\n  exportToPDF() {\n    let tableHtml = this.getExportHtml();\n\n    let style = \"<style>\";\n    style = style + \"table {width: 100%;font: 17px Calibri;}\";\n    style = style + \"table, th, td {border: solid 1px #DDD; border-collapse: collapse;\";\n    style = style + \"padding: 2px 3px;text-align:left;}\";\n    style = style + \"</style>\";\n\n    let win = window.open('', '_blank');\n    let currentTime = new Date();\n    const currentDate = String(currentTime.getDate()).padStart(2, '0');\n    const currentMonth = String(currentTime.getMonth() + 1).padStart(2, '0');\n    const currentYear = currentTime.getFullYear();\n    const nameProject = this.props.dataGit.slice((this.props.dataGit.lastIndexOf(\"/\")) + 1)\n    const nameFile = `${this.props.data.language}_SAST_${nameProject}_${currentMonth}_${currentDate}_${currentYear}`;\n    win.document.write('<html><head>');\n    win.document.write('<title>' + nameFile + '</title>');\n    win.document.write(style);\n    win.document.write('</head>');\n    win.document.write('<body>');\n    win.document.write('<h1>' + this.config.filename + '</h1>');\n    win.document.write(tableHtml);\n    win.document.write('</body></html>');\n    win.print();\n    win.close();\n  }\n\n  convertToCSV(objArray){\n    let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\n    let str = '';\n    for (let i = 0; i < array.length; i++) {\n      let line = '';\n      for (let index in array[i]) {\n        if (line !== '') line += ','\n        line += array[i][index];\n      }\n      str += line + '\\r\\n';\n    }\n    return str;\n  }\n\n  exportToCSV(){\n    let headers = {};\n    // add columns in sheet array\n    for (let column of this.columns) {\n      headers[column.key] = '\"' + column.text + '\"';\n    }\n\n    // Filter records before export\n    // let filterRecords = this.props.records;\n    let filterRecords = this.props.data.results;\n    if(this.props.dynamic === false) {\n      let records = this.sortRecords(),\n          filterValue = this.state.filter_value;\n      filterRecords = records;\n\n      if (filterValue) {\n        filterRecords = this.filterData(records);\n      }\n    }\n\n    let records = [];\n    // add data rows in sheet array\n    for (let i in filterRecords) {\n      let record = filterRecords[i],\n          newRecord = {};\n      for (let column of this.columns) {\n        if (column.cell && typeof column.cell === \"function\") {\n          let cellData =  ReactDOMServer.renderToStaticMarkup(column.cell(record, i));\n          cellData = this.strip(cellData);\n          cellData = cellData.replace(/(?:\\r\\n|\\r|\\n)/g, \" | \");\n          cellData = cellData.replace(/\"/g, \"'\");\n          cellData = '\"' + cellData + '\"';\n          newRecord[column.key] = cellData;\n        } else if (record[column.key]) {\n          let colValue  = record[column.key];\n          colValue = (typeof colValue === \"string\") ? colValue.replace(/\"/g, '\"\"') : colValue;\n          newRecord[column.key] = '\"' + colValue + '\"';\n        } else {\n          newRecord[column.key] = \"\";\n        }\n      }\n      records.push(newRecord);\n    }\n    if (headers) {\n      records.unshift(headers);\n    }\n    // Convert Object to JSON\n    let jsonObject = JSON.stringify(records);\n    let csv = this.convertToCSV(jsonObject);\n    let currentTime = new Date();\n    const currentDate = String(currentTime.getDate()).padStart(2, '0');\n    const currentMonth = String(currentTime.getMonth() + 1).padStart(2, '0');\n    const currentYear = currentTime.getFullYear();\n    const nameProject = this.props.dataGit.slice((this.props.dataGit.lastIndexOf(\"/\")) + 1)\n    const nameFile = `${this.props.data.language}_SAST_${nameProject}_${currentMonth}_${currentDate}_${currentYear}`;\n    let exportedFilename = nameFile + '.csv' || 'export.csv';\n    let blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n    if (navigator.msSaveBlob) { // IE 10+\n      navigator.msSaveBlob(blob, exportedFilename);\n    } else {\n      let link = document.createElement(\"a\");\n      if (link.download !== undefined) { // feature detection\n        // Browsers that support HTML5 download attribute\n        let url = URL.createObjectURL(blob);\n        link.setAttribute(\"href\", url);\n        link.setAttribute(\"download\", exportedFilename);\n        link.style.visibility = 'hidden';\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n      }\n    }\n  }\n\n  onChange(){\n    let tableData = {\n      filter_value: this.state.filter_value,\n      page_number: this.state.page_number,\n      page_size: this.state.page_size,\n      sort_order: this.state.sort\n    };\n    this.props.onChange(tableData);\n  }\n\n  filterData(records) {\n\n    let filterValue = this.state.filter_value;\n\n    return records.filter((record) => {\n      let allow = false;\n      _.each(this.columns, (column, key) => {\n        if (record[column.key]) {\n          allow = _.includes(record[column.key].toString().toLowerCase(), filterValue.toString().toLowerCase()) ? true : allow;\n        }\n      });\n      return allow;\n    });\n  }\n\n  sortRecords(){\n    if(this.state.sort.oder){\n      return _.orderBy(this.props.records, o => {\n        let colVal = o[this.state.sort.column];\n        let typeofColVal = typeof colVal;\n\n        if (typeofColVal === \"string\") {\n          if (isNaN(colVal)) {\n            return String(colVal.toLowerCase());\n          } else {\n            return Number(colVal);\n          }\n        } else if (typeofColVal === \"number\") {\n          return Number(colVal);\n        }\n      }, [this.state.sort.order]);\n    } else {\n      return this.props.data.results;\n      // this.props.data.results\n    }\n  }\n\n  changeStatus = () => {\n    this.setState({\n      statusPopup : !this.state.statusPopup\n    });\n\n  }\n  changeMemo = (event,record) => {\n    this.setState({\n      openMemo : !this.state.openMemo,\n      contentMemo: record.note,\n      idMemo: record.id\n    });\n  }\n\n  handleClose = () => {\n    this.setState({\n      openMemo : false\n    });\n  }\n\n\n  render() {\n\n    this.props.data.results.map((item, index) => {\n      this.props.data.results[index].run_type = this.props.runType;\n      this.props.data.results[index].timestamp = this.props.data.updated_at;\n    })\n    let filterRecords, totalRecords, pages, isFirst, isLast;\n    if(this.props.dynamic === false) {\n      let records = (this.props.onSort) ? this.props.onSort(this.state.sort.column, this.props.data.results, this.state.sort.order) : this.sortRecords(),\n          filterValue = this.state.filter_value;\n      filterRecords = records;\n      if (filterValue) {\n        filterRecords = this.filterData(records);\n      }\n      totalRecords = Array.isArray(filterRecords) ? filterRecords.length : 0;\n      pages = this.pages = this.numPages(totalRecords);\n      isFirst = this.isFirst();\n      isLast = this.isLast();\n      filterRecords = Array.isArray(filterRecords) ? this.paginate(filterRecords) : [];\n    }else{\n      filterRecords = this.props.records;\n      totalRecords = this.props.total_record;\n      pages = this.pages = this.numPages(totalRecords);\n      isFirst = this.isFirst();\n      isLast = this.isLast();\n    }\n    // filterRecords = this.props.records;\n    let startRecords = (this.state.page_number * this.state.page_size) - (this.state.page_size - 1);\n    let endRecords = this.state.page_size * this.state.page_number;\n    endRecords = (endRecords > totalRecords) ? totalRecords : endRecords;\n\n    let lengthMenuText = this.config.language.length_menu;\n    lengthMenuText = lengthMenuText.split('_MENU_');\n    let paginationInfo = this.config.language.info;\n    paginationInfo = paginationInfo.replace('_START_', (this.state.page_number === 1) ? 1 : startRecords);\n    paginationInfo = paginationInfo.replace('_END_', endRecords);\n    paginationInfo = paginationInfo.replace('_TOTAL_', totalRecords);\n\n    this.columns = [\n      {\n        key: \"description\",\n        text: \"description\",\n        className: \"description\",\n        align: \"center\",\n        width: 200,\n        sortable: true,\n        cell: record => {\n          return (\n              <div className=\"fix-width-des\">\n                <span>\n                  {record.description}\n                </span>\n              </div>\n          )\n        }\n      },\n      {\n        key: \"severity\",\n        text: \"severity\",\n        className: \"severity\",\n        align: \"center\",\n        width: 80,\n        sortable: true,\n        cell: record => {\n          return (\n              <div className=\"fix-center\">\n                <span>\n                    {record.severity}\n                </span>\n              </div>\n          )\n        }\n      },\n      {\n        key: \"file_path\",\n        text: \"file path\",\n        className: \"file_path\",\n        align: \"center\",\n        width: 200,\n        sortable: true,\n        cell: record => {\n          return (\n              <div className=\"fix-width-location\">\n                <span>\n                  {record.file_path}\n                </span>\n              </div>\n          )\n        }\n      },\n      {\n        key: \"start_line\",\n        text: \"start line\",\n        className: \"start_line\",\n        align: \"center\",\n        width: 50,\n        sortable: true,\n        cell: record => {\n          return (\n              <div className=\"fix-center\">\n                <span>\n                  {record.start_line}\n                </span>\n              </div>\n          )\n        }\n      },\n      {\n        key: \"link\",\n        text: \"link\",\n        className: \"link\",\n        align: \"center\",\n        width: 100,\n        sortable: true,\n        cell: record => {\n          return (\n              <div className=\"fix-width-location\">\n                <span>\n                  <a href={record.link} target=\"_blank\">{record.link}</a>\n                </span>\n              </div>\n          )\n        }\n      },\n      {\n        key: \"note\",\n        text: \"memo\",\n        className: \"note\",\n        align: \"left\",\n        width: 100,\n        sortable: true,\n        cell: record => {\n          return (\n              <div className=\"fix-width-location\">\n                <span>\n                  {record.note}\n                </span>\n                <br/>\n                <Button\n                  variant=\"info\"\n                  size=\"sm\"\n                  className=\"btn btn-primary btn-sm pull-right\"\n                  id={record.id}\n                  onClick={event => this.changeMemo(event,record)}\n                >\n                <FaPen />\n              </Button>\n              </div>\n          )\n        }\n      }\n    ];\n\n    this.sortedCurrentValuesNew = [\"1\",\"2\",\"3\",\"4\"];\n    return (\n        <div className=\"as-react-table\" id={(this.props.id) ? this.props.id + \"-container\" : \"\"}>\n          <TableHeader\n              config={this.config}\n              id={this.props.id}\n              lengthMenuText={lengthMenuText}\n              recordLength={(this.props.dynamic) ? this.props.total_record : this.props.records.length}\n              filterRecords={this.filterRecords.bind(this)}\n              changePageSize={this.changePageSize.bind(this)}\n              exportToExcel={this.exportToExcel.bind(this)}\n              exportToCSV={this.exportToCSV.bind(this)}\n              exportToPDF={this.exportToPDF.bind(this)}\n              extraButtons={this.props.extraButtons}\n              updateAt={this.props.data.updated_at}\n          />\n\n          <div className=\"row table-body asrt-table-body\" style={style.table_body} id={(this.props.id) ? this.props.id + \"-table-body\" : \"\"}>\n            <div className=\"col-md-12\">\n              <LanguageStatistics data={this.props.dataSubtask}/>\n              <table className={this.props.className} id={this.props.id}>\n                <thead className={this.props.tHeadClassName ? this.props.tHeadClassName : ''}>\n                <tr>\n                  {\n                    this.columns.map((column, index) => {\n                      let classText = (column.sortable) ? \"sortable \" : \"\",\n                          width = (column.width) ? column.width : \"\",\n                          align = (column.align) ? column.align : \"\",\n                          sortOrder = \"\"\n                      if (column.sortable && this.state.sort.column === column.key) {\n                        sortOrder = this.state.sort.order;\n                        classText += (sortOrder) ? \" \" + sortOrder : \"\";\n                      }\n\n                      classText += \" text-\" + align;\n                      if(column.TrOnlyClassName)\n                        classText += \" \" + column.TrOnlyClassName;\n                      return (<th\n                          key={(column.key) ? column.key : column.text}\n                          className={classText}\n                          width={width}\n                          onClick={event => this.sortColumn(event, column, sortOrder)}>\n                        {column.text}\n                      </th>);\n                    })\n                  }\n                </tr>\n                </thead>\n\n                <tbody>\n                {this.props.loading === true ? (\n                    <tr>\n                      <td colSpan={this.columns.length} className=\"asrt-td-loading\" align=\"center\">\n                        <div className=\"asrt-loading-textwrap\">\n                        <span className=\"asrt-loading-text\">\n                          {this.config.language.loading_text}\n                        </span>\n                        </div>\n                      </td>\n                    </tr>\n                ) : (\n                    (filterRecords.length) ?\n                        filterRecords.map((record, rowIndex) => {\n                          rowIndex = _.indexOf(this.props.records, record);\n                          return (\n                              <tr key={record[this.config.key_column]} onClick={(e) => this.props.onRowClicked(e, record, rowIndex)}>\n                                {\n                                  this.columns.map((column, colIndex) => {\n                                    if (column.cell && typeof column.cell === \"function\") {\n                                      return (<td className={column.className} key={(column.key) ? column.key : column.text}>{column.cell(record,rowIndex)}</td>);\n                                    }else if (record[column.key]) {\n                                      return (<td className={column.className} key={(column.key) ? column.key : column.text}>\n                                        {record[column.key]}\n                                      </td>);\n                                    }else {\n                                      return <td className={column.className} key={(column.key) ? column.key : column.text}></td>\n                                    }\n                                  })\n                                }\n                              </tr>\n                          )\n                        }) :\n                        (\n                            <tr>\n                              <td colSpan={this.columns.length} align=\"center\">\n                                {this.config.language.no_data_text}\n                              </td>\n                            </tr>\n                        )\n                )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <Modal\n              show={this.state.openMemo}\n              onHide={this.handleClose}\n          >\n            <ContentMemo  idMemo={this.state.idMemo} content={this.state.contentMemo}/>\n          </Modal>\n          <TableFooter\n              config={this.config}\n              id={this.props.id}\n              isFirst={isFirst}\n              isLast={isLast}\n              paginationInfo={paginationInfo}\n              pages={pages}\n              page_number={this.state.page_number}\n              is_temp_page={this.state.is_temp_page}\n              temp_page_number={this.state.temp_page_number}\n              firstPage={this.firstPage.bind(this)}\n              lastPage={this.lastPage.bind(this)}\n              previousPage={this.previousPage.bind(this)}\n              nextPage={this.nextPage.bind(this)}\n              goToPage={this.goToPage.bind(this)}\n              changePageSize={this.changePageSize.bind(this)}\n              onPageChange={this.onPageChange.bind(this)}\n              onPageBlur={this.onPageBlur.bind(this)}/>\n        </div>\n    );\n  }\n}\n\n/**\n * Define component display name\n */\nDetailHistory.displayName = 'ReactDatatable';\n\n/**\n * Define defaultProps for this component\n */\nDetailHistory.defaultProps = {\n  id: \"as-react-datatable\",\n  className: \"table table-bordered table-striped\",\n  columns: [],\n  config: {\n    button: {\n      excel: true,\n      print: true,\n      csv: true\n    },\n    filename: \"table\",\n    key_column:\"id\",\n    language: {\n      length_menu: \"Show _MENU_ records per page\",\n      filter: \"Search in records...\",\n      info: \"Showing _START_ to _END_ of _TOTAL_ entries\",\n      pagination: {\n        first: \"First\",\n        previous: \"Previous\",\n        next: \"Next\",\n        last: \"Last\"\n      }\n    },\n    length_menu: [10, 25, 50, 75, 100],\n    no_data_text: \"No rows found\",\n    page_size: 10,\n    sort: {\n      column: \"test\",\n      order: \"asc\"\n    },\n    show_length_menu: true,\n    show_filter: true,\n    show_pagination: true,\n    show_info: true,\n    show_first: true,\n    show_last: true\n  },\n  dynamic: false,\n  records: [],\n  total_record: 0,\n  onChange: () => { },\n  onPageChange: () => { },\n  onRowClicked: () => { }\n}\n\nexport default DetailHistory;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
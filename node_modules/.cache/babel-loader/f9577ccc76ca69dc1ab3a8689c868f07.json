{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\ci-tools\\\\frontend\\\\src\\\\components\\\\Style\\\\Detail\\\\DetailHistoryDast.jsx\";\nimport React, { Component } from \"react\";\nimport ReactDOMServer from 'react-dom/server';\nimport _ from 'lodash';\nimport '../../../assets/css/style.css';\nimport TableHeader from \"../History/TableHeader\";\nimport TableFooter from \"../History/TableFooter\";\nimport style from '../History/style';\nimport { FaPen } from 'react-icons/fa';\nimport { Button } from \"react-bootstrap\";\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport Modal from \"react-bootstrap/lib/Modal\";\nimport ContentMemo from \"./ContentMemo\";\nimport DastDetailMemo from \"./DastDetailMemo\";\nimport ContentDetailRecord from \"./ContentDetailRecord\";\n\nclass DetailHistoryDast extends Component {\n  constructor(props) {\n    super(props); // this.exportExcelRef = React.createRef();\n\n    this.changeStatus = () => {\n      this.setState({\n        statusPopup: !this.state.statusPopup\n      });\n    };\n\n    this.changeMemo = (event, record) => {\n      this.setState({\n        openMemo: !this.state.openMemo,\n        contentMemo: record.note,\n        idMemo: record.id\n      });\n    };\n\n    this.showDetailRecord = (event, record) => {\n      this.setState({\n        openDetailRecord: !this.state.openMemo,\n        contentDetailRecord: record\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        openMemo: false\n      });\n    };\n\n    this.handleCloseDetailRecord = () => {\n      this.setState({\n        openDetailRecord: false\n      });\n    };\n\n    this.sortColumn = this.sortColumn.bind(this);\n    this.numPages = this.numPages.bind(this);\n    this.exportToExcel = this.exportToExcel.bind(this);\n    this.exportToPDF = this.exportToPDF.bind(this);\n    this.exportToCSV = this.exportToCSV.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.filterRecords = this.filterRecords.bind(this);\n    this.filterData = this.filterData.bind(this);\n    this.sortRecords = this.sortRecords.bind(this);\n    this.config = {\n      button: {\n        excel: props.config && props.config.button && props.config.button.excel ? props.config.button.excel : false,\n        print: props.config && props.config.button && props.config.button.print ? props.config.button.print : false,\n        csv: props.config && props.config.button && props.config.button.csv ? props.config.button.csv : false,\n        extra: props.config && props.config.button && props.config.button.extra ? props.config.button.extra : false\n      },\n      filename: props.config && props.config.filename ? props.config.filename : \"table\",\n      key_column: props.config && props.config.key_column ? props.config.key_column : \"id\",\n      language: {\n        length_menu: props.config && props.config.language && props.config.language.length_menu ? props.config.language.length_menu : \"Show _MENU_ records per page\",\n        filter: props.config && props.config.language && props.config.language.filter ? props.config.language.filter : \"Search in records...\",\n        info: props.config && props.config.language && props.config.language.info ? props.config.language.info : \"Showing _START_ to _END_ of _TOTAL_ entries\",\n        pagination: {\n          first: props.config && props.config.language && props.config.language.pagination && props.config.language.pagination.first ? props.config.language.pagination.first : \"First\",\n          previous: props.config && props.config.language && props.config.language.pagination && props.config.language.pagination.previous ? props.config.language.pagination.previous : \"Previous\",\n          next: props.config && props.config.language && props.config.language.pagination && props.config.language.pagination.next ? props.config.language.pagination.next : \"Next\",\n          last: props.config && props.config.language && props.config.language.pagination && props.config.language.pagination.last ? props.config.language.pagination.last : \"Last\"\n        },\n        no_data_text: props.config && props.config.language && props.config.language.no_data_text ? props.config.language.no_data_text : 'No rows found',\n        loading_text: props.config && props.config.language && props.config.language.loading_text ? props.config.language.loading_text : \"Loading...\"\n      },\n      length_menu: props.config && props.config.length_menu ? props.config.length_menu : [10, 25, 50, 75, 100],\n      show_length_menu: props.config.show_length_menu !== undefined ? props.config.show_length_menu : true,\n      show_filter: props.config.show_filter !== undefined ? props.config.show_filter : true,\n      show_pagination: props.config.show_pagination !== undefined ? props.config.show_pagination : true,\n      show_info: props.config.show_info !== undefined ? props.config.show_info : true,\n      show_first: props.config.show_first !== undefined ? props.config.show_first : true,\n      show_last: props.config.show_last !== undefined ? props.config.show_last : true,\n      pagination: props.config.pagination ? props.config.pagination : 'basic'\n    };\n    this.state = {\n      is_temp_page: false,\n      filter_value: \"\",\n      page_size: props.config.page_size ? props.config.page_size : 10,\n      page_number: 1,\n      sort: props.config && props.config.sort ? props.config.sort : false,\n      openMemo: false,\n      contentMemo: '',\n      contentDetailRecord: '',\n      openDetailRecord: false,\n      idMemo: '' // responseDetail : props.responseDetail\n\n    };\n  }\n\n  filterRecords(e) {\n    let value = e.target.value;\n    this.setState({\n      page_number: 1,\n      filter_value: value\n    }, () => {\n      this.onChange();\n    });\n  }\n\n  changePageSize(e) {\n    let value = e.target.value;\n    this.setState({\n      page_size: value\n    }, () => {\n      this.onChange();\n    });\n  }\n\n  sortColumn(event, column, sortOrder) {\n    if (!column.sortable) return false;\n    let newSortOrder = sortOrder === \"asc\" ? \"desc\" : \"asc\";\n    this.setState({\n      'sort': {\n        column: column.key,\n        order: newSortOrder\n      }\n    }, () => {\n      this.onChange();\n    });\n  }\n\n  paginate(records) {\n    let page_size = this.state.page_size;\n    let page_number = this.state.page_number;\n    --page_number; // because pages logically start with 1, but technically with 0\n\n    return records.slice(page_number * page_size, (page_number + 1) * page_size);\n  }\n\n  numPages(totalRecord) {\n    return Math.ceil(totalRecord / this.state.page_size);\n  }\n\n  isLast() {\n    // because for empty records page_number will still be 1\n    if (this.pages === 0) {\n      return true;\n    }\n\n    if (this.state.page_number === this.pages) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isFirst() {\n    if (this.state.page_number === 1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  goToPage(e, pageNumber) {\n    e.preventDefault();\n\n    if (this.state.page_number === pageNumber) {\n      return;\n    }\n\n    let pageState = {\n      previous_page: this.state.page_number,\n      current_page: pageNumber\n    };\n    this.setState({\n      is_temp_page: false,\n      page_number: pageNumber\n    }, () => {\n      this.props.onPageChange(pageState);\n      this.onChange();\n    });\n  }\n\n  firstPage(e) {\n    e.preventDefault();\n    if (this.isFirst()) return;\n    this.goToPage(e, 1);\n  }\n\n  lastPage(e) {\n    e.preventDefault();\n    if (this.isLast()) return;\n    this.goToPage(e, this.pages);\n  }\n\n  previousPage(e) {\n    e.preventDefault();\n    if (this.isFirst()) return false;\n    this.goToPage(e, this.state.page_number - 1);\n  }\n\n  nextPage(e) {\n    e.preventDefault();\n    if (this.isLast()) return;\n    this.goToPage(e, parseInt(this.state.page_number) + 1);\n  }\n\n  onPageChange(e, isInputChange = false) {\n    if (isInputChange) {\n      this.setState({\n        is_temp_page: true,\n        temp_page_number: e.target.value\n      });\n    } else {\n      if (e.key === 'Enter') {\n        let pageNumber = e.target.value;\n        this.goToPage(e, pageNumber);\n      }\n    }\n  }\n\n  onPageBlur(e) {\n    let pageNumber = e.target.value;\n    this.goToPage(e, pageNumber);\n  }\n\n  strip(html) {\n    let doc = new DOMParser().parseFromString(html, 'text/html');\n    return doc.body.textContent || \"\";\n  }\n\n  getExportHtml() {\n    let tableHtml = \"<table>\";\n    tableHtml += \"<thead>\";\n    tableHtml += \"<tr>\";\n\n    for (let column of this.columns) {\n      tableHtml += \"<th>\" + column.text + \"</th>\";\n    }\n\n    tableHtml += \"</tr>\";\n    tableHtml += \"</thead>\";\n    tableHtml += \"<tbody>\"; // Filter records before export\n\n    let filterRecords = this.props.records;\n\n    if (this.props.dynamic === false) {\n      let records = this.sortRecords(),\n          filterValue = this.state.filter_value;\n      filterRecords = records;\n\n      if (filterValue) {\n        filterRecords = this.filterData(records);\n      }\n    }\n\n    for (let i in filterRecords) {\n      let record = filterRecords[i];\n      tableHtml += \"<tr>\";\n\n      for (let column of this.columns) {\n        if (column.cell && typeof column.cell === \"function\") {\n          let cellData = ReactDOMServer.renderToStaticMarkup(column.cell(record, i));\n          cellData = this.strip(cellData);\n          tableHtml += \"<td>\" + cellData + \"</td>\";\n        } else if (record[column.key]) {\n          tableHtml += \"<td>\" + record[column.key] + \"</td>\";\n        } else {\n          tableHtml += \"<td></td>\";\n        }\n      }\n\n      tableHtml += \"</tr>\";\n    }\n\n    tableHtml += \"</tbody>\";\n    tableHtml += \"</table>\";\n    return tableHtml;\n  }\n\n  exportToExcel() {\n    let filterRecords = this.props.data;\n\n    if (this.props.dynamic === false) {\n      let records = this.sortRecords(),\n          filterValue = this.state.filter_value;\n      filterRecords = records;\n\n      if (filterValue) {\n        filterRecords = this.filterData(records);\n      }\n    }\n\n    let filterData = [];\n    filterRecords.map((index, key) => {\n      filterData[key] = {\n        severity: index.severity,\n        memo: index.note.replace(/(?:\\r\\n|\\r|\\n)/g, \" | \"),\n        location_file: index.file_path,\n        line: index.start_line,\n        id: index.id,\n        message: index.message,\n        description: index.description\n      };\n    });\n    let fixData = [];\n    let totalInfo = 0;\n    let totalLow = 0;\n    let totalMedium = 0;\n    let totalHight = 0;\n    let totalCritical = 0;\n    this.props.data.map((item, key) => {\n      if (item.severity === \"Info\") {\n        totalInfo += 1;\n      }\n\n      if (item.severity === \"Low\") {\n        totalLow += 1;\n      }\n\n      if (item.severity === \"High\") {\n        totalHight += 1;\n      }\n\n      if (item.severity === \"Medium\") {\n        totalMedium += 1;\n      }\n\n      if (item.severity === \"Critical\") {\n        totalCritical += 1;\n      }\n    });\n    fixData[0] = {\n      col1: 'DAST result data Summary',\n      col2: '',\n      col3: '',\n      col4: '',\n      col5: ''\n    };\n    fixData[1] = {\n      col1: '',\n      col2: '',\n      col3: '',\n      col4: '',\n      col5: ''\n    };\n    fixData[2] = {\n      col1: 'SCANNER',\n      col2: 'zap proxy',\n      col3: '',\n      col4: '',\n      col5: ''\n    };\n    fixData[3] = {\n      col1: 'SCANNER VERSION',\n      col2: '2.0.1',\n      col3: '',\n      col4: '',\n      col5: ''\n    };\n    fixData[4] = {\n      col1: 'START DATE',\n      col2: this.props.data.created_at,\n      col3: '',\n      col4: '',\n      col5: ''\n    };\n    fixData[5] = {\n      col1: 'END DATE',\n      col2: this.props.data.updated_at,\n      col3: '',\n      col4: '',\n      col5: ''\n    };\n    fixData[6] = {\n      col1: 'SCAN STATUS',\n      col2: 'success',\n      col3: '',\n      col4: '',\n      col5: ''\n    };\n    fixData[7] = {\n      col1: '',\n      col2: '',\n      col3: '',\n      col4: '',\n      col5: ''\n    };\n    fixData[8] = {\n      col1: 'Git base URL',\n      col2: this.props.dataGit,\n      col3: '',\n      col4: '',\n      col5: ''\n    };\n    fixData[9] = {\n      col1: 'Git branch',\n      col2: this.props.dataBranch,\n      col3: '',\n      col4: '',\n      col5: ''\n    };\n    fixData[10] = {\n      col1: '',\n      col2: '',\n      col3: '',\n      col4: '',\n      col5: ''\n    };\n    fixData[11] = {\n      col1: 'Results',\n      col2: 'Total',\n      col3: 'CRITICAL',\n      col4: 'HIGH',\n      col5: 'MID',\n      col6: 'LOW',\n      col7: 'INFO'\n    };\n    fixData[12] = {\n      col1: '-- all',\n      col2: this.props.data.length,\n      col3: totalCritical,\n      col4: totalHight,\n      col5: totalMedium,\n      col6: totalLow,\n      col7: totalInfo\n    };\n    fixData[13] = {\n      col1: '-- target',\n      col2: '',\n      col3: '',\n      col4: '',\n      col5: '',\n      col6: '',\n      col7: ''\n    };\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const fileExtension = '.xlsx';\n    const ws = XLSX.utils.json_to_sheet(filterData);\n    const w1 = XLSX.utils.json_to_sheet(fixData, {\n      skipHeader: true\n    });\n    const wb = {\n      Sheets: {\n        'Summary': w1,\n        'Vulnerabilities': ws\n      },\n      SheetNames: ['Summary', 'Vulnerabilities']\n    };\n    const excelBuffer = XLSX.write(wb, {\n      bookType: 'xlsx',\n      type: 'array'\n    });\n    const data = new Blob([excelBuffer], {\n      type: fileType\n    });\n    let currentTime = new Date();\n    const currentDate = String(currentTime.getDate()).padStart(2, '0');\n    const currentMonth = String(currentTime.getMonth() + 1).padStart(2, '0');\n    const currentYear = currentTime.getFullYear(); // const nameProject = this.props.dataGit.slice((this.props.dataGit.lastIndexOf(\"/\")) + 1)\n    // const nameFile = `${this.props.data.language}_SAST_${nameProject}_${currentMonth}_${currentDate}_${currentYear}`;\n\n    const nameFile = \"\".concat(this.props.data.language, \"_SAST_nameproject_\").concat(currentMonth, \"_\").concat(currentDate, \"_\").concat(currentYear);\n    FileSaver.saveAs(data, nameFile + fileExtension);\n  }\n\n  exportToPDF() {\n    let tableHtml = this.getExportHtml();\n    let style = \"<style>\";\n    style = style + \"table {width: 100%;font: 17px Calibri;}\";\n    style = style + \"table, th, td {border: solid 1px #DDD; border-collapse: collapse;\";\n    style = style + \"padding: 2px 3px;text-align:left;}\";\n    style = style + \"</style>\";\n    let win = window.open('', '_blank');\n    let currentTime = new Date();\n    const currentDate = String(currentTime.getDate()).padStart(2, '0');\n    const currentMonth = String(currentTime.getMonth() + 1).padStart(2, '0');\n    const currentYear = currentTime.getFullYear(); // const nameProject = this.props.dataGit.slice((this.props.dataGit.lastIndexOf(\"/\")) + 1)\n    // const nameFile = `${this.props.data.language}_SAST_${nameProject}_${currentMonth}_${currentDate}_${currentYear}`;\n\n    const nameFile = \"\".concat(this.props.data.language, \"_SAST_nameProject_\").concat(currentMonth, \"_\").concat(currentDate, \"_\").concat(currentYear);\n    win.document.write('<html><head>');\n    win.document.write('<title>' + nameFile + '</title>');\n    win.document.write(style);\n    win.document.write('</head>');\n    win.document.write('<body>');\n    win.document.write('<h1>' + this.config.filename + '</h1>');\n    win.document.write(tableHtml);\n    win.document.write('</body></html>');\n    win.print();\n    win.close();\n  }\n\n  convertToCSV(objArray) {\n    let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\n    let str = '';\n\n    for (let i = 0; i < array.length; i++) {\n      let line = '';\n\n      for (let index in array[i]) {\n        if (line !== '') line += ',';\n        line += array[i][index];\n      }\n\n      str += line + '\\r\\n';\n    }\n\n    return str;\n  }\n\n  exportToCSV() {\n    let headers = {}; // add columns in sheet array\n\n    for (let column of this.columns) {\n      headers[column.key] = '\"' + column.text + '\"';\n    } // Filter records before export\n    // let filterRecords = this.props.records;\n\n\n    let filterRecords = this.props.data;\n\n    if (this.props.dynamic === false) {\n      let records = this.sortRecords(),\n          filterValue = this.state.filter_value;\n      filterRecords = records;\n\n      if (filterValue) {\n        filterRecords = this.filterData(records);\n      }\n    }\n\n    let records = []; // add data rows in sheet array\n\n    for (let i in filterRecords) {\n      let record = filterRecords[i],\n          newRecord = {};\n\n      for (let column of this.columns) {\n        if (column.cell && typeof column.cell === \"function\") {\n          let cellData = ReactDOMServer.renderToStaticMarkup(column.cell(record, i));\n          cellData = this.strip(cellData);\n          cellData = cellData.replace(/(?:\\r\\n|\\r|\\n)/g, \" | \");\n          cellData = cellData.replace(/\"/g, \"'\");\n          cellData = '\"' + cellData + '\"';\n          newRecord[column.key] = cellData;\n        } else if (record[column.key]) {\n          let colValue = record[column.key];\n          colValue = typeof colValue === \"string\" ? colValue.replace(/\"/g, '\"\"') : colValue;\n          newRecord[column.key] = '\"' + colValue + '\"';\n        } else {\n          newRecord[column.key] = \"\";\n        }\n      }\n\n      records.push(newRecord);\n    }\n\n    if (headers) {\n      records.unshift(headers);\n    } // Convert Object to JSON\n\n\n    let jsonObject = JSON.stringify(records);\n    let csv = this.convertToCSV(jsonObject);\n    let currentTime = new Date();\n    const currentDate = String(currentTime.getDate()).padStart(2, '0');\n    const currentMonth = String(currentTime.getMonth() + 1).padStart(2, '0');\n    const currentYear = currentTime.getFullYear(); // const nameProject = this.props.dataGit.slice((this.props.dataGit.lastIndexOf(\"/\")) + 1)\n\n    const nameFile = \"\".concat(this.props.data.language, \"_SAST_nameProject_\").concat(currentMonth, \"_\").concat(currentDate, \"_\").concat(currentYear); // const nameFile = `${this.props.data.language}_SAST_${nameProject}_${currentMonth}_${currentDate}_${currentYear}`;\n\n    let exportedFilename = nameFile + '.csv' || 'export.csv';\n    let blob = new Blob([csv], {\n      type: 'text/csv;charset=utf-8;'\n    });\n\n    if (navigator.msSaveBlob) {\n      // IE 10+\n      navigator.msSaveBlob(blob, exportedFilename);\n    } else {\n      let link = document.createElement(\"a\");\n\n      if (link.download !== undefined) {\n        // feature detection\n        // Browsers that support HTML5 download attribute\n        let url = URL.createObjectURL(blob);\n        link.setAttribute(\"href\", url);\n        link.setAttribute(\"download\", exportedFilename);\n        link.style.visibility = 'hidden';\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n      }\n    }\n  }\n\n  onChange() {\n    let tableData = {\n      filter_value: this.state.filter_value,\n      page_number: this.state.page_number,\n      page_size: this.state.page_size,\n      sort_order: this.state.sort\n    };\n    this.props.onChange(tableData);\n  }\n\n  filterData(records) {\n    let filterValue = this.state.filter_value;\n    return records.filter(record => {\n      let allow = false;\n\n      _.each(this.columns, (column, key) => {\n        if (record[column.key]) {\n          allow = _.includes(record[column.key].toString().toLowerCase(), filterValue.toString().toLowerCase()) ? true : allow;\n        }\n      });\n\n      return allow;\n    });\n  }\n\n  sortRecords() {\n    if (this.state.sort.oder) {\n      return _.orderBy(this.props.records, o => {\n        let colVal = o[this.state.sort.column];\n        let typeofColVal = typeof colVal;\n\n        if (typeofColVal === \"string\") {\n          if (isNaN(colVal)) {\n            return String(colVal.toLowerCase());\n          } else {\n            return Number(colVal);\n          }\n        } else if (typeofColVal === \"number\") {\n          return Number(colVal);\n        }\n      }, [this.state.sort.order]);\n    } else {\n      return this.props.data; // this.props.data\n    }\n  }\n\n  render() {\n    let filterRecords, totalRecords, pages, isFirst, isLast;\n\n    if (this.props.dynamic === false) {\n      let records = this.props.onSort ? this.props.onSort(this.state.sort.column, this.props.data, this.state.sort.order) : this.sortRecords(),\n          filterValue = this.state.filter_value;\n      filterRecords = records;\n\n      if (filterValue) {\n        filterRecords = this.filterData(records);\n      }\n\n      totalRecords = Array.isArray(filterRecords) ? filterRecords.length : 0;\n      pages = this.pages = this.numPages(totalRecords);\n      isFirst = this.isFirst();\n      isLast = this.isLast();\n      filterRecords = Array.isArray(filterRecords) ? this.paginate(filterRecords) : [];\n    } else {\n      filterRecords = this.props.records;\n      totalRecords = this.props.total_record;\n      pages = this.pages = this.numPages(totalRecords);\n      isFirst = this.isFirst();\n      isLast = this.isLast();\n    } // filterRecords = this.props.records;\n\n\n    let startRecords = this.state.page_number * this.state.page_size - (this.state.page_size - 1);\n    let endRecords = this.state.page_size * this.state.page_number;\n    endRecords = endRecords > totalRecords ? totalRecords : endRecords;\n    let lengthMenuText = this.config.language.length_menu;\n    lengthMenuText = lengthMenuText.split('_MENU_');\n    let paginationInfo = this.config.language.info;\n    paginationInfo = paginationInfo.replace('_START_', this.state.page_number === 1 ? 1 : startRecords);\n    paginationInfo = paginationInfo.replace('_END_', endRecords);\n    paginationInfo = paginationInfo.replace('_TOTAL_', totalRecords);\n    this.columns = [{\n      key: \"message\",\n      text: \"message\",\n      className: \"message\",\n      align: \"center\",\n      width: 200,\n      sortable: true,\n      cell: record => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"fix-width-des\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 17\n          }\n        }, record.message));\n      }\n    }, {\n      key: \"severity\",\n      text: \"severity\",\n      className: \"severity\",\n      align: \"center\",\n      width: 80,\n      sortable: true,\n      cell: record => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"fix-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 17\n          }\n        }, record.severity));\n      }\n    }, {\n      key: \"description\",\n      text: \"Description\",\n      className: \"description\",\n      align: \"center\",\n      width: 200,\n      sortable: true,\n      cell: record => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"fix-width-location\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 17\n          }\n        }, record.description));\n      }\n    }, // {\n    //   key: \"method\",\n    //   text: \"method\",\n    //   className: \"method\",\n    //   align: \"center\",\n    //   width: 50,\n    //   sortable: true,\n    //   cell: record => {\n    //     return (\n    //         <div className=\"fix-center\">\n    //           <span>\n    //             {record.method}\n    //           </span>\n    //         </div>\n    //     )\n    //   }\n    // },\n    {\n      key: \"link\",\n      text: \"Detail\",\n      className: \"viewmore\",\n      align: \"center\",\n      width: 100,\n      sortable: true,\n      cell: record => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"fix-width-location fix-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: \"#\",\n          onClick: event => this.showDetailRecord(event, record),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 17\n          }\n        }, \"Viewmore\"));\n      }\n    }, {\n      key: \"note\",\n      text: \"memo\",\n      className: \"note\",\n      align: \"left\",\n      width: 100,\n      sortable: true,\n      cell: record => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"fix-width-location\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 17\n          }\n        }, record.note), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          variant: \"info\",\n          size: \"sm\",\n          className: \"btn btn-primary btn-sm pull-right\",\n          id: record.id,\n          onClick: event => this.changeMemo(event, record),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(FaPen, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 17\n          }\n        })));\n      }\n    }];\n    this.sortedCurrentValuesNew = [\"1\", \"2\", \"3\", \"4\", \"5\"];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"as-react-table\",\n      id: this.props.id ? this.props.id + \"-container\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableHeader, {\n      config: this.config,\n      id: this.props.id,\n      lengthMenuText: lengthMenuText,\n      recordLength: this.props.dynamic ? this.props.total_record : this.props.records.length,\n      filterRecords: this.filterRecords.bind(this),\n      changePageSize: this.changePageSize.bind(this),\n      exportToExcel: this.exportToExcel.bind(this),\n      exportToCSV: this.exportToCSV.bind(this),\n      exportToPDF: this.exportToPDF.bind(this),\n      extraButtons: this.props.extraButtons,\n      updateAt: this.props.data.updated_at,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row table-body asrt-table-body\",\n      style: style.table_body,\n      id: this.props.id ? this.props.id + \"-table-body\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: this.props.className,\n      id: this.props.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: this.props.tHeadClassName ? this.props.tHeadClassName : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 17\n      }\n    }, this.columns.map((column, index) => {\n      let classText = column.sortable ? \"sortable \" : \"\",\n          width = column.width ? column.width : \"\",\n          align = column.align ? column.align : \"\",\n          sortOrder = \"\";\n\n      if (column.sortable && this.state.sort.column === column.key) {\n        sortOrder = this.state.sort.order;\n        classText += sortOrder ? \" \" + sortOrder : \"\";\n      }\n\n      classText += \" text-\" + align;\n      if (column.TrOnlyClassName) classText += \" \" + column.TrOnlyClassName;\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: column.key ? column.key : column.text,\n        className: classText,\n        width: width,\n        onClick: event => this.sortColumn(event, column, sortOrder),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 31\n        }\n      }, column.text);\n    }))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 17\n      }\n    }, this.props.loading === true ? /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: this.columns.length,\n      className: \"asrt-td-loading\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"asrt-loading-textwrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"asrt-loading-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 25\n      }\n    }, this.config.language.loading_text)))) : filterRecords.length ? filterRecords.map((record, rowIndex) => {\n      rowIndex = _.indexOf(this.props.records, record);\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: record[this.config.key_column],\n        onClick: e => this.props.onRowClicked(e, record, rowIndex),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 31\n        }\n      }, this.columns.map((column, colIndex) => {\n        if (column.cell && typeof column.cell === \"function\") {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            className: column.className,\n            key: column.key ? column.key : column.text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 832,\n              columnNumber: 47\n            }\n          }, column.cell(record, rowIndex));\n        } else if (record[column.key]) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            className: column.className,\n            key: column.key ? column.key : column.text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 47\n            }\n          }, record[column.key]);\n        } else {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            className: column.className,\n            key: column.key ? column.key : column.text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 838,\n              columnNumber: 46\n            }\n          });\n        }\n      }));\n    }) : /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: this.columns.length,\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 31\n      }\n    }, this.config.language.no_data_text)))))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.openMemo,\n      onHide: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DastDetailMemo, {\n      idMemo: this.state.idMemo,\n      content: this.state.contentMemo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.openDetailRecord,\n      onHide: this.handleCloseDetailRecord,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ContentDetailRecord, {\n      content: this.state.contentDetailRecord,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 867,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(TableFooter, {\n      config: this.config,\n      id: this.props.id,\n      isFirst: isFirst,\n      isLast: isLast,\n      paginationInfo: paginationInfo,\n      pages: pages,\n      page_number: this.state.page_number,\n      is_temp_page: this.state.is_temp_page,\n      temp_page_number: this.state.temp_page_number,\n      firstPage: this.firstPage.bind(this),\n      lastPage: this.lastPage.bind(this),\n      previousPage: this.previousPage.bind(this),\n      nextPage: this.nextPage.bind(this),\n      goToPage: this.goToPage.bind(this),\n      changePageSize: this.changePageSize.bind(this),\n      onPageChange: this.onPageChange.bind(this),\n      onPageBlur: this.onPageBlur.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n/**\r\n * Define component display name\r\n */\n\n\nDetailHistoryDast.displayName = 'ReactDatatable';\n/**\r\n * Define defaultProps for this component\r\n */\n\nDetailHistoryDast.defaultProps = {\n  id: \"as-react-datatable\",\n  className: \"table table-bordered table-striped\",\n  columns: [],\n  config: {\n    button: {\n      excel: true,\n      print: true,\n      csv: true\n    },\n    filename: \"table\",\n    key_column: \"id\",\n    language: {\n      length_menu: \"Show _MENU_ records per page\",\n      filter: \"Search in records...\",\n      info: \"Showing _START_ to _END_ of _TOTAL_ entries\",\n      pagination: {\n        first: \"First\",\n        previous: \"Previous\",\n        next: \"Next\",\n        last: \"Last\"\n      }\n    },\n    length_menu: [10, 25, 50, 75, 100],\n    no_data_text: \"No rows found\",\n    page_size: 10,\n    sort: {\n      column: \"test\",\n      order: \"asc\"\n    },\n    show_length_menu: true,\n    show_filter: true,\n    show_pagination: true,\n    show_info: true,\n    show_first: true,\n    show_last: true\n  },\n  dynamic: false,\n  records: [],\n  total_record: 0,\n  onChange: () => {},\n  onPageChange: () => {},\n  onRowClicked: () => {}\n};\nexport default DetailHistoryDast;","map":{"version":3,"names":["React","Component","ReactDOMServer","_","TableHeader","TableFooter","style","FaPen","Button","FileSaver","XLSX","Modal","ContentMemo","DastDetailMemo","ContentDetailRecord","DetailHistoryDast","constructor","props","changeStatus","setState","statusPopup","state","changeMemo","event","record","openMemo","contentMemo","note","idMemo","id","showDetailRecord","openDetailRecord","contentDetailRecord","handleClose","handleCloseDetailRecord","sortColumn","bind","numPages","exportToExcel","exportToPDF","exportToCSV","onChange","filterRecords","filterData","sortRecords","config","button","excel","print","csv","extra","filename","key_column","language","length_menu","filter","info","pagination","first","previous","next","last","no_data_text","loading_text","show_length_menu","undefined","show_filter","show_pagination","show_info","show_first","show_last","is_temp_page","filter_value","page_size","page_number","sort","e","value","target","changePageSize","column","sortOrder","sortable","newSortOrder","key","order","paginate","records","slice","totalRecord","Math","ceil","isLast","pages","isFirst","goToPage","pageNumber","preventDefault","pageState","previous_page","current_page","onPageChange","firstPage","lastPage","previousPage","nextPage","parseInt","isInputChange","temp_page_number","onPageBlur","strip","html","doc","DOMParser","parseFromString","body","textContent","getExportHtml","tableHtml","columns","text","dynamic","filterValue","i","cell","cellData","renderToStaticMarkup","data","map","index","severity","memo","replace","location_file","file_path","line","start_line","message","description","fixData","totalInfo","totalLow","totalMedium","totalHight","totalCritical","item","col1","col2","col3","col4","col5","created_at","updated_at","dataGit","dataBranch","col6","col7","length","fileType","fileExtension","ws","utils","json_to_sheet","w1","skipHeader","wb","Sheets","SheetNames","excelBuffer","write","bookType","type","Blob","currentTime","Date","currentDate","String","getDate","padStart","currentMonth","getMonth","currentYear","getFullYear","nameFile","saveAs","win","window","open","document","close","convertToCSV","objArray","array","JSON","parse","str","headers","newRecord","colValue","push","unshift","jsonObject","stringify","exportedFilename","blob","navigator","msSaveBlob","link","createElement","download","url","URL","createObjectURL","setAttribute","visibility","appendChild","click","remove","tableData","sort_order","allow","each","includes","toString","toLowerCase","oder","orderBy","o","colVal","typeofColVal","isNaN","Number","render","totalRecords","onSort","Array","isArray","total_record","startRecords","endRecords","lengthMenuText","split","paginationInfo","className","align","width","sortedCurrentValuesNew","extraButtons","table_body","tHeadClassName","classText","TrOnlyClassName","loading","rowIndex","indexOf","onRowClicked","colIndex","displayName","defaultProps"],"sources":["C:/web/ci-tools/frontend/src/components/Style/Detail/DetailHistoryDast.jsx"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport _ from 'lodash';\r\nimport '../../../assets/css/style.css';\r\n\r\nimport TableHeader from \"../History/TableHeader\";\r\nimport TableFooter from \"../History/TableFooter\";\r\nimport style from '../History/style';\r\nimport { FaPen } from 'react-icons/fa';\r\nimport { Button } from \"react-bootstrap\";\r\nimport * as FileSaver from 'file-saver'\r\nimport * as XLSX from 'xlsx'\r\nimport Modal from \"react-bootstrap/lib/Modal\";\r\nimport ContentMemo from \"./ContentMemo\";\r\nimport DastDetailMemo from \"./DastDetailMemo\";\r\nimport ContentDetailRecord from \"./ContentDetailRecord\";\r\n\r\nclass DetailHistoryDast extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    // this.exportExcelRef = React.createRef();\r\n    this.sortColumn = this.sortColumn.bind(this);\r\n    this.numPages = this.numPages.bind(this);\r\n    this.exportToExcel = this.exportToExcel.bind(this);\r\n    this.exportToPDF = this.exportToPDF.bind(this);\r\n    this.exportToCSV = this.exportToCSV.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.filterRecords = this.filterRecords.bind(this);\r\n    this.filterData = this.filterData.bind(this);\r\n    this.sortRecords = this.sortRecords.bind(this);\r\n    this.config = {\r\n      button: {\r\n        excel: (props.config && props.config.button && props.config.button.excel) ? props.config.button.excel : false,\r\n        print: (props.config && props.config.button && props.config.button.print) ? props.config.button.print : false,\r\n        csv: (props.config && props.config.button && props.config.button.csv) ? props.config.button.csv : false,\r\n        extra : (props.config && props.config.button && props.config.button.extra) ? props.config.button.extra : false,\r\n      },\r\n      filename: (props.config && props.config.filename) ? props.config.filename : \"table\",\r\n      key_column: props.config && props.config.key_column ? props.config.key_column : \"id\",\r\n      language: {\r\n        length_menu: (props.config && props.config.language && props.config.language.length_menu) ? props.config.language.length_menu : \"Show _MENU_ records per page\",\r\n        filter: (props.config && props.config.language && props.config.language.filter) ? props.config.language.filter : \"Search in records...\",\r\n        info: (props.config && props.config.language && props.config.language.info) ? props.config.language.info : \"Showing _START_ to _END_ of _TOTAL_ entries\",\r\n        pagination: {\r\n          first: (props.config && props.config.language && props.config.language.pagination && props.config.language.pagination.first) ? props.config.language.pagination.first : \"First\",\r\n          previous: (props.config && props.config.language && props.config.language.pagination && props.config.language.pagination.previous) ? props.config.language.pagination.previous : \"Previous\",\r\n          next: (props.config && props.config.language && props.config.language.pagination && props.config.language.pagination.next) ? props.config.language.pagination.next : \"Next\",\r\n          last: (props.config && props.config.language && props.config.language.pagination && props.config.language.pagination.last) ? props.config.language.pagination.last : \"Last\"\r\n        },\r\n        no_data_text: (props.config && props.config.language && props.config.language.no_data_text) ? props.config.language.no_data_text : 'No rows found',\r\n        loading_text: (props.config && props.config.language && props.config.language.loading_text) ? props.config.language.loading_text : \"Loading...\"\r\n      },\r\n      length_menu: (props.config && props.config.length_menu) ? props.config.length_menu : [10, 25, 50, 75, 100],\r\n      show_length_menu: (props.config.show_length_menu !== undefined) ? props.config.show_length_menu : true,\r\n      show_filter: (props.config.show_filter !== undefined) ? props.config.show_filter : true,\r\n      show_pagination: (props.config.show_pagination !== undefined) ? props.config.show_pagination : true,\r\n      show_info: (props.config.show_info !== undefined) ? props.config.show_info : true,\r\n      show_first: (props.config.show_first !== undefined) ? props.config.show_first : true,\r\n      show_last: (props.config.show_last !== undefined) ? props.config.show_last : true,\r\n      pagination: (props.config.pagination) ? props.config.pagination : 'basic'\r\n    };\r\n    this.state = {\r\n      is_temp_page: false,\r\n      filter_value: \"\",\r\n      page_size: (props.config.page_size) ? props.config.page_size : 10,\r\n      page_number: 1,\r\n      sort: (props.config && props.config.sort) ? props.config.sort : false,\r\n      openMemo : false,\r\n      contentMemo: '',\r\n      contentDetailRecord: '',\r\n      openDetailRecord : false,\r\n      idMemo: ''\r\n      // responseDetail : props.responseDetail\r\n    };\r\n  }\r\n\r\n  filterRecords(e) {\r\n    let value = e.target.value;\r\n    this.setState({\r\n      page_number: 1,\r\n      filter_value: value\r\n    }, () => {\r\n      this.onChange();\r\n    });\r\n  }\r\n\r\n  changePageSize(e) {\r\n    let value = e.target.value;\r\n    this.setState({\r\n      page_size: value\r\n    }, () => {\r\n      this.onChange();\r\n    });\r\n  }\r\n\r\n  sortColumn(event, column, sortOrder) {\r\n    if (!column.sortable) return false;\r\n    let newSortOrder = (sortOrder === \"asc\") ? \"desc\" : \"asc\";\r\n    this.setState({\r\n      'sort': { column: column.key, order: newSortOrder }\r\n    }, () => {\r\n      this.onChange();\r\n    });\r\n  }\r\n\r\n  paginate(records) {\r\n    let page_size = this.state.page_size;\r\n    let page_number = this.state.page_number;\r\n    --page_number; // because pages logically start with 1, but technically with 0\r\n    return records.slice(page_number * page_size, (page_number + 1) * page_size);\r\n  }\r\n\r\n  numPages(totalRecord){\r\n    return Math.ceil(totalRecord / this.state.page_size);\r\n  }\r\n\r\n  isLast() {\r\n    // because for empty records page_number will still be 1\r\n    if(this.pages === 0){\r\n      return true;\r\n    }\r\n    if (this.state.page_number === this.pages) {\r\n      return true\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  isFirst() {\r\n    if (this.state.page_number === 1) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  goToPage(e, pageNumber){\r\n    e.preventDefault();\r\n    if(this.state.page_number === pageNumber){\r\n      return;\r\n    }\r\n    let pageState = {\r\n      previous_page: this.state.page_number,\r\n      current_page: pageNumber\r\n    };\r\n    this.setState({\r\n      is_temp_page: false,\r\n      page_number: pageNumber\r\n    }, () => {\r\n      this.props.onPageChange(pageState);\r\n      this.onChange();\r\n    });\r\n  }\r\n\r\n  firstPage(e) {\r\n    e.preventDefault();\r\n    if(this.isFirst()) return;\r\n    this.goToPage(e, 1);\r\n  }\r\n\r\n  lastPage(e) {\r\n    e.preventDefault();\r\n    if(this.isLast()) return;\r\n    this.goToPage(e, this.pages);\r\n  }\r\n\r\n  previousPage(e) {\r\n    e.preventDefault();\r\n    if(this.isFirst()) return false;\r\n    this.goToPage(e, this.state.page_number - 1);\r\n  }\r\n\r\n  nextPage(e) {\r\n    e.preventDefault();\r\n    if(this.isLast()) return;\r\n    this.goToPage(e, parseInt(this.state.page_number) + 1);\r\n  }\r\n\r\n  onPageChange(e, isInputChange = false) {\r\n    if(isInputChange){\r\n      this.setState({\r\n        is_temp_page : true,\r\n        temp_page_number: e.target.value\r\n      });\r\n    } else {\r\n      if (e.key === 'Enter') {\r\n        let pageNumber = e.target.value;\r\n        this.goToPage(e, pageNumber);\r\n      }\r\n    }\r\n  }\r\n\r\n  onPageBlur(e){\r\n    let pageNumber = e.target.value;\r\n    this.goToPage(e, pageNumber);\r\n  }\r\n\r\n  strip(html){\r\n    let doc = new DOMParser().parseFromString(html, 'text/html');\r\n    return doc.body.textContent || \"\";\r\n  }\r\n\r\n  getExportHtml(){\r\n    let tableHtml = \"<table>\";\r\n    tableHtml += \"<thead>\";\r\n    tableHtml += \"<tr>\";\r\n    for (let column of this.columns) {\r\n      tableHtml += \"<th>\" + column.text + \"</th>\";\r\n    }\r\n    tableHtml += \"</tr>\";\r\n    tableHtml += \"</thead>\";\r\n    tableHtml += \"<tbody>\";\r\n\r\n    // Filter records before export\r\n    let filterRecords = this.props.records;\r\n    if(this.props.dynamic === false){\r\n      let records = this.sortRecords(),\r\n          filterValue = this.state.filter_value;\r\n      filterRecords = records;\r\n\r\n      if (filterValue) {\r\n        filterRecords = this.filterData(records);\r\n      }\r\n    }\r\n\r\n    for (let i in filterRecords) {\r\n      let record = filterRecords[i];\r\n      tableHtml += \"<tr>\";\r\n      for (let column of this.columns) {\r\n        if (column.cell && typeof column.cell === \"function\") {\r\n          let cellData =  ReactDOMServer.renderToStaticMarkup(column.cell(record, i));\r\n          cellData = this.strip(cellData);\r\n          tableHtml += \"<td>\" + cellData + \"</td>\";\r\n        }else if (record[column.key]) {\r\n          tableHtml += \"<td>\" + record[column.key] + \"</td>\";\r\n        } else {\r\n          tableHtml += \"<td></td>\";\r\n        }\r\n      }\r\n      tableHtml += \"</tr>\";\r\n    }\r\n    tableHtml += \"</tbody>\";\r\n    tableHtml += \"</table>\";\r\n\r\n    return tableHtml;\r\n  }\r\n\r\n  exportToExcel(){\r\n    let filterRecords = this.props.data;\r\n    if(this.props.dynamic === false) {\r\n      let records = this.sortRecords(),\r\n          filterValue = this.state.filter_value;\r\n      filterRecords = records;\r\n      if (filterValue) {\r\n        filterRecords = this.filterData(records);\r\n      }\r\n    }\r\n    let filterData = [];\r\n    filterRecords.map((index,key) => {\r\n      filterData[key] = {\r\n        severity: index.severity,\r\n        memo: index.note.replace(/(?:\\r\\n|\\r|\\n)/g, \" | \"),\r\n        location_file: index.file_path,\r\n        line: index.start_line,\r\n        id:index.id,\r\n        message:index.message,\r\n        description: index.description,\r\n      };\r\n    })\r\n\r\n    let fixData = [];\r\n    let totalInfo = 0;\r\n    let totalLow = 0;\r\n    let totalMedium = 0;\r\n    let totalHight = 0;   \r\n    let totalCritical = 0;\r\n    this.props.data.map((item,key)=>{\r\n      if(item.severity === \"Info\") {\r\n        totalInfo += 1;\r\n      }\r\n      if(item.severity === \"Low\") {\r\n        totalLow += 1;\r\n      }\r\n      if(item.severity === \"High\") {\r\n        totalHight += 1;\r\n      }\r\n      if(item.severity === \"Medium\") {\r\n        totalMedium += 1;\r\n      }\r\n      if(item.severity === \"Critical\") {\r\n        totalCritical += 1;\r\n      }\r\n    })\r\n    fixData[0] = {\r\n      col1: 'DAST result data Summary',\r\n      col2: '',\r\n      col3: '',\r\n      col4: '',\r\n      col5: '',\r\n    }\r\n    fixData[1] = {\r\n      col1: '',\r\n      col2: '',\r\n      col3: '',\r\n      col4: '',\r\n      col5: '',\r\n    }\r\n    fixData[2] = {\r\n      col1: 'SCANNER',\r\n      col2: 'zap proxy',\r\n      col3: '',\r\n      col4: '',\r\n      col5: '',\r\n    }\r\n    fixData[3] = {\r\n      col1: 'SCANNER VERSION',\r\n      col2: '2.0.1',\r\n      col3: '',\r\n      col4: '',\r\n      col5: '',\r\n    }\r\n    fixData[4] = {\r\n      col1: 'START DATE',\r\n      col2: this.props.data.created_at,\r\n      col3: '',\r\n      col4: '',\r\n      col5: '',\r\n    }\r\n    fixData[5] = {\r\n      col1: 'END DATE',\r\n      col2: this.props.data.updated_at,\r\n      col3: '',\r\n      col4: '',\r\n      col5: '',\r\n    }\r\n    fixData[6] = {\r\n      col1: 'SCAN STATUS',\r\n      col2: 'success',\r\n      col3: '',\r\n      col4: '',\r\n      col5: '',\r\n    }\r\n    fixData[7] = {\r\n      col1: '',\r\n      col2: '',\r\n      col3: '',\r\n      col4: '',\r\n      col5: '',\r\n    }\r\n    fixData[8] = {\r\n      col1: 'Git base URL',\r\n      col2: this.props.dataGit,\r\n      col3: '',\r\n      col4: '',\r\n      col5: '',\r\n    }\r\n    fixData[9] = {\r\n      col1: 'Git branch',\r\n      col2: this.props.dataBranch,\r\n      col3: '',\r\n      col4: '',\r\n      col5: '',\r\n    }\r\n    fixData[10] = {\r\n      col1: '',\r\n      col2: '',\r\n      col3: '',\r\n      col4: '',\r\n      col5: '',\r\n    }\r\n    fixData[11] = {\r\n      col1: 'Results',\r\n      col2: 'Total',\r\n      col3: 'CRITICAL',\r\n      col4: 'HIGH',\r\n      col5: 'MID',\r\n      col6: 'LOW',\r\n      col7: 'INFO'\r\n    }\r\n    fixData[12] = {\r\n      col1: '-- all',\r\n      col2: this.props.data.length,\r\n      col3: totalCritical,\r\n      col4: totalHight,\r\n      col5: totalMedium,\r\n      col6: totalLow,\r\n      col7: totalInfo\r\n    }\r\n    fixData[13] = {\r\n      col1: '-- target',\r\n      col2: '',\r\n      col3: '',\r\n      col4: '',\r\n      col5: '',\r\n      col6: '',\r\n      col7: ''\r\n    }\r\n\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n    const ws = XLSX.utils.json_to_sheet(filterData);\r\n    const w1 = XLSX.utils.json_to_sheet(fixData,{skipHeader: true});\r\n    const wb = { Sheets: { 'Summary': w1,'Vulnerabilities':ws }, SheetNames: ['Summary','Vulnerabilities'] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], {type: fileType});\r\n    let currentTime = new Date();\r\n    const currentDate = String(currentTime.getDate()).padStart(2, '0');\r\n    const currentMonth = String(currentTime.getMonth() + 1).padStart(2, '0');\r\n    const currentYear = currentTime.getFullYear();\r\n    // const nameProject = this.props.dataGit.slice((this.props.dataGit.lastIndexOf(\"/\")) + 1)\r\n    // const nameFile = `${this.props.data.language}_SAST_${nameProject}_${currentMonth}_${currentDate}_${currentYear}`;\r\n    const nameFile = `${this.props.data.language}_SAST_nameproject_${currentMonth}_${currentDate}_${currentYear}`;\r\n    FileSaver.saveAs(data, nameFile + fileExtension);\r\n  }\r\n\r\n  exportToPDF() {\r\n    let tableHtml = this.getExportHtml();\r\n\r\n    let style = \"<style>\";\r\n    style = style + \"table {width: 100%;font: 17px Calibri;}\";\r\n    style = style + \"table, th, td {border: solid 1px #DDD; border-collapse: collapse;\";\r\n    style = style + \"padding: 2px 3px;text-align:left;}\";\r\n    style = style + \"</style>\";\r\n\r\n    let win = window.open('', '_blank');\r\n    let currentTime = new Date();\r\n    const currentDate = String(currentTime.getDate()).padStart(2, '0');\r\n    const currentMonth = String(currentTime.getMonth() + 1).padStart(2, '0');\r\n    const currentYear = currentTime.getFullYear();\r\n    // const nameProject = this.props.dataGit.slice((this.props.dataGit.lastIndexOf(\"/\")) + 1)\r\n    // const nameFile = `${this.props.data.language}_SAST_${nameProject}_${currentMonth}_${currentDate}_${currentYear}`;\r\n    const nameFile = `${this.props.data.language}_SAST_nameProject_${currentMonth}_${currentDate}_${currentYear}`;\r\n    win.document.write('<html><head>');\r\n    win.document.write('<title>' + nameFile + '</title>');\r\n    win.document.write(style);\r\n    win.document.write('</head>');\r\n    win.document.write('<body>');\r\n    win.document.write('<h1>' + this.config.filename + '</h1>');\r\n    win.document.write(tableHtml);\r\n    win.document.write('</body></html>');\r\n    win.print();\r\n    win.close();\r\n  }\r\n\r\n  convertToCSV(objArray){\r\n    let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\r\n    let str = '';\r\n    for (let i = 0; i < array.length; i++) {\r\n      let line = '';\r\n      for (let index in array[i]) {\r\n        if (line !== '') line += ','\r\n        line += array[i][index];\r\n      }\r\n      str += line + '\\r\\n';\r\n    }\r\n    return str;\r\n  }\r\n\r\n  exportToCSV(){\r\n    let headers = {};\r\n    // add columns in sheet array\r\n    for (let column of this.columns) {\r\n      headers[column.key] = '\"' + column.text + '\"';\r\n    }\r\n\r\n    // Filter records before export\r\n    // let filterRecords = this.props.records;\r\n    let filterRecords = this.props.data;\r\n    if(this.props.dynamic === false) {\r\n      let records = this.sortRecords(),\r\n          filterValue = this.state.filter_value;\r\n      filterRecords = records;\r\n\r\n      if (filterValue) {\r\n        filterRecords = this.filterData(records);\r\n      }\r\n    }\r\n\r\n    let records = [];\r\n    // add data rows in sheet array\r\n    for (let i in filterRecords) {\r\n      let record = filterRecords[i],\r\n          newRecord = {};\r\n      for (let column of this.columns) {\r\n        if (column.cell && typeof column.cell === \"function\") {\r\n          let cellData =  ReactDOMServer.renderToStaticMarkup(column.cell(record, i));\r\n          cellData = this.strip(cellData);\r\n          cellData = cellData.replace(/(?:\\r\\n|\\r|\\n)/g, \" | \");\r\n          cellData = cellData.replace(/\"/g, \"'\");\r\n          cellData = '\"' + cellData + '\"';\r\n          newRecord[column.key] = cellData;\r\n        } else if (record[column.key]) {\r\n          let colValue  = record[column.key];\r\n          colValue = (typeof colValue === \"string\") ? colValue.replace(/\"/g, '\"\"') : colValue;\r\n          newRecord[column.key] = '\"' + colValue + '\"';\r\n        } else {\r\n          newRecord[column.key] = \"\";\r\n        }\r\n      }\r\n      records.push(newRecord);\r\n    }\r\n    if (headers) {\r\n      records.unshift(headers);\r\n    }\r\n    // Convert Object to JSON\r\n    let jsonObject = JSON.stringify(records);\r\n    let csv = this.convertToCSV(jsonObject);\r\n    let currentTime = new Date();\r\n    const currentDate = String(currentTime.getDate()).padStart(2, '0');\r\n    const currentMonth = String(currentTime.getMonth() + 1).padStart(2, '0');\r\n    const currentYear = currentTime.getFullYear();\r\n    // const nameProject = this.props.dataGit.slice((this.props.dataGit.lastIndexOf(\"/\")) + 1)\r\n    const nameFile = `${this.props.data.language}_SAST_nameProject_${currentMonth}_${currentDate}_${currentYear}`;\r\n    // const nameFile = `${this.props.data.language}_SAST_${nameProject}_${currentMonth}_${currentDate}_${currentYear}`;\r\n    let exportedFilename = nameFile + '.csv' || 'export.csv';\r\n    let blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\r\n    if (navigator.msSaveBlob) { // IE 10+\r\n      navigator.msSaveBlob(blob, exportedFilename);\r\n    } else {\r\n      let link = document.createElement(\"a\");\r\n      if (link.download !== undefined) { // feature detection\r\n        // Browsers that support HTML5 download attribute\r\n        let url = URL.createObjectURL(blob);\r\n        link.setAttribute(\"href\", url);\r\n        link.setAttribute(\"download\", exportedFilename);\r\n        link.style.visibility = 'hidden';\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        link.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n  onChange(){\r\n    let tableData = {\r\n      filter_value: this.state.filter_value,\r\n      page_number: this.state.page_number,\r\n      page_size: this.state.page_size,\r\n      sort_order: this.state.sort\r\n    };\r\n    this.props.onChange(tableData);\r\n  }\r\n\r\n  filterData(records) {\r\n\r\n    let filterValue = this.state.filter_value;\r\n\r\n    return records.filter((record) => {\r\n      let allow = false;\r\n      _.each(this.columns, (column, key) => {\r\n        if (record[column.key]) {\r\n          allow = _.includes(record[column.key].toString().toLowerCase(), filterValue.toString().toLowerCase()) ? true : allow;\r\n        }\r\n      });\r\n      return allow;\r\n    });\r\n  }\r\n\r\n  sortRecords(){\r\n    if(this.state.sort.oder){\r\n      return _.orderBy(this.props.records, o => {\r\n        let colVal = o[this.state.sort.column];\r\n        let typeofColVal = typeof colVal;\r\n\r\n        if (typeofColVal === \"string\") {\r\n          if (isNaN(colVal)) {\r\n            return String(colVal.toLowerCase());\r\n          } else {\r\n            return Number(colVal);\r\n          }\r\n        } else if (typeofColVal === \"number\") {\r\n          return Number(colVal);\r\n        }\r\n      }, [this.state.sort.order]);\r\n    } else {\r\n      return this.props.data;\r\n      // this.props.data\r\n    }\r\n  }\r\n\r\n  changeStatus = () => {\r\n    this.setState({\r\n      statusPopup : !this.state.statusPopup\r\n    });\r\n\r\n  }\r\n  changeMemo = (event,record) => {\r\n    this.setState({\r\n      openMemo : !this.state.openMemo,\r\n      contentMemo: record.note,\r\n      idMemo: record.id\r\n    });\r\n  }\r\n\r\n  showDetailRecord = (event,record) => {\r\n    this.setState({\r\n      openDetailRecord : !this.state.openMemo,\r\n      contentDetailRecord: record,\r\n    });\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      openMemo : false\r\n    });\r\n  }\r\n\r\n  handleCloseDetailRecord = () => {\r\n    this.setState({\r\n      openDetailRecord : false\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    let filterRecords, totalRecords, pages, isFirst, isLast;\r\n\r\n    if(this.props.dynamic === false) {\r\n      let records = (this.props.onSort) ? this.props.onSort(this.state.sort.column, this.props.data, this.state.sort.order) : this.sortRecords(),\r\n          filterValue = this.state.filter_value;\r\n      filterRecords = records;\r\n\r\n      if (filterValue) {\r\n        filterRecords = this.filterData(records);\r\n      }\r\n      totalRecords = Array.isArray(filterRecords) ? filterRecords.length : 0;\r\n      pages = this.pages = this.numPages(totalRecords);\r\n      isFirst = this.isFirst();\r\n      isLast = this.isLast();\r\n      filterRecords = Array.isArray(filterRecords) ? this.paginate(filterRecords) : [];\r\n    }else{\r\n      filterRecords = this.props.records;\r\n      totalRecords = this.props.total_record;\r\n      pages = this.pages = this.numPages(totalRecords);\r\n      isFirst = this.isFirst();\r\n      isLast = this.isLast();\r\n    }\r\n    // filterRecords = this.props.records;\r\n    let startRecords = (this.state.page_number * this.state.page_size) - (this.state.page_size - 1);\r\n    let endRecords = this.state.page_size * this.state.page_number;\r\n    endRecords = (endRecords > totalRecords) ? totalRecords : endRecords;\r\n\r\n    let lengthMenuText = this.config.language.length_menu;\r\n    lengthMenuText = lengthMenuText.split('_MENU_');\r\n    let paginationInfo = this.config.language.info;\r\n    paginationInfo = paginationInfo.replace('_START_', (this.state.page_number === 1) ? 1 : startRecords);\r\n    paginationInfo = paginationInfo.replace('_END_', endRecords);\r\n    paginationInfo = paginationInfo.replace('_TOTAL_', totalRecords);\r\n\r\n    this.columns = [\r\n      {\r\n        key: \"message\",\r\n        text: \"message\",\r\n        className: \"message\",\r\n        align: \"center\",\r\n        width: 200,\r\n        sortable: true,\r\n        cell: record => {\r\n          return (\r\n              <div className=\"fix-width-des\">\r\n                <span>\r\n                  {record.message}\r\n                </span>\r\n              </div>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        key: \"severity\",\r\n        text: \"severity\",\r\n        className: \"severity\",\r\n        align: \"center\",\r\n        width: 80,\r\n        sortable: true,\r\n        cell: record => {\r\n          return (\r\n              <div className=\"fix-center\">\r\n                <span>\r\n                    {record.severity}\r\n                </span>\r\n              </div>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        key: \"description\",\r\n        text: \"Description\",\r\n        className: \"description\",\r\n        align: \"center\",\r\n        width: 200,\r\n        sortable: true,\r\n        cell: record => {\r\n          return (\r\n              <div className=\"fix-width-location\">\r\n                <span>\r\n                  {record.description}\r\n                </span>\r\n              </div>\r\n          )\r\n        }\r\n      },\r\n      // {\r\n      //   key: \"method\",\r\n      //   text: \"method\",\r\n      //   className: \"method\",\r\n      //   align: \"center\",\r\n      //   width: 50,\r\n      //   sortable: true,\r\n      //   cell: record => {\r\n      //     return (\r\n      //         <div className=\"fix-center\">\r\n      //           <span>\r\n      //             {record.method}\r\n      //           </span>\r\n      //         </div>\r\n      //     )\r\n      //   }\r\n      // },\r\n      {\r\n        key: \"link\",\r\n        text: \"Detail\",\r\n        className: \"viewmore\",\r\n        align: \"center\",\r\n        width: 100,\r\n        sortable: true,\r\n        cell: record => {\r\n          return (\r\n              <div className=\"fix-width-location fix-center\">\r\n                <a href=\"#\" onClick={event => this.showDetailRecord(event,record)}>Viewmore</a>\r\n              </div>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        key: \"note\",\r\n        text: \"memo\",\r\n        className: \"note\",\r\n        align: \"left\",\r\n        width: 100,\r\n        sortable: true,\r\n        cell: record => {\r\n          return (\r\n              <div className=\"fix-width-location\">\r\n                <span>\r\n                  {record.note}\r\n                </span>\r\n                <br/>\r\n                <Button\r\n                  variant=\"info\"\r\n                  size=\"sm\"\r\n                  className=\"btn btn-primary btn-sm pull-right\"\r\n                  id={record.id}\r\n                  onClick={event => this.changeMemo(event,record)}\r\n                >\r\n                <FaPen />\r\n              </Button>\r\n              </div>\r\n          )\r\n        }\r\n      }\r\n    ];\r\n\r\n    this.sortedCurrentValuesNew = [\"1\",\"2\",\"3\",\"4\",\"5\"];\r\n    return (\r\n        <div className=\"as-react-table\" id={(this.props.id) ? this.props.id + \"-container\" : \"\"}>\r\n          <TableHeader\r\n              config={this.config}\r\n              id={this.props.id}\r\n              lengthMenuText={lengthMenuText}\r\n              recordLength={(this.props.dynamic) ? this.props.total_record : this.props.records.length}\r\n              filterRecords={this.filterRecords.bind(this)}\r\n              changePageSize={this.changePageSize.bind(this)}\r\n              exportToExcel={this.exportToExcel.bind(this)}\r\n              exportToCSV={this.exportToCSV.bind(this)}\r\n              exportToPDF={this.exportToPDF.bind(this)}\r\n              extraButtons={this.props.extraButtons}\r\n              updateAt={this.props.data.updated_at}\r\n          />\r\n\r\n          <div className=\"row table-body asrt-table-body\" style={style.table_body} id={(this.props.id) ? this.props.id + \"-table-body\" : \"\"}>\r\n            <div className=\"col-md-12\">\r\n              <table className={this.props.className} id={this.props.id}>\r\n                <thead className={this.props.tHeadClassName ? this.props.tHeadClassName : ''}>\r\n                <tr>\r\n                  {\r\n                    this.columns.map((column, index) => {\r\n                      let classText = (column.sortable) ? \"sortable \" : \"\",\r\n                          width = (column.width) ? column.width : \"\",\r\n                          align = (column.align) ? column.align : \"\",\r\n                          sortOrder = \"\"\r\n                      if (column.sortable && this.state.sort.column === column.key) {\r\n                        sortOrder = this.state.sort.order;\r\n                        classText += (sortOrder) ? \" \" + sortOrder : \"\";\r\n                      }\r\n\r\n                      classText += \" text-\" + align;\r\n                      if(column.TrOnlyClassName)\r\n                        classText += \" \" + column.TrOnlyClassName;\r\n                      return (<th\r\n                          key={(column.key) ? column.key : column.text}\r\n                          className={classText}\r\n                          width={width}\r\n                          onClick={event => this.sortColumn(event, column, sortOrder)}>\r\n                        {column.text}\r\n                      </th>);\r\n                    })\r\n                  }\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {this.props.loading === true ? (\r\n                    <tr>\r\n                      <td colSpan={this.columns.length} className=\"asrt-td-loading\" align=\"center\">\r\n                        <div className=\"asrt-loading-textwrap\">\r\n                        <span className=\"asrt-loading-text\">\r\n                          {this.config.language.loading_text}\r\n                        </span>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                ) : (\r\n                    (filterRecords.length) ?\r\n                        filterRecords.map((record, rowIndex) => {\r\n                          rowIndex = _.indexOf(this.props.records, record);\r\n                          return (\r\n                              <tr key={record[this.config.key_column]} onClick={(e) => this.props.onRowClicked(e, record, rowIndex)}>\r\n                                {\r\n                                  this.columns.map((column, colIndex) => {\r\n                                    if (column.cell && typeof column.cell === \"function\") {\r\n                                      return (<td className={column.className} key={(column.key) ? column.key : column.text}>{column.cell(record,rowIndex)}</td>);\r\n                                    }else if (record[column.key]) {\r\n                                      return (<td className={column.className} key={(column.key) ? column.key : column.text}>\r\n                                        {record[column.key]}\r\n                                      </td>);\r\n                                    }else {\r\n                                      return <td className={column.className} key={(column.key) ? column.key : column.text}></td>\r\n                                    }\r\n                                  })\r\n                                }\r\n                              </tr>\r\n                          )\r\n                        }) :\r\n                        (\r\n                            <tr>\r\n                              <td colSpan={this.columns.length} align=\"center\">\r\n                                {this.config.language.no_data_text}\r\n                              </td>\r\n                            </tr>\r\n                        )\r\n                )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <Modal\r\n              show={this.state.openMemo}\r\n              onHide={this.handleClose}\r\n          >\r\n            <DastDetailMemo  idMemo={this.state.idMemo} content={this.state.contentMemo}/>\r\n          </Modal>\r\n          <Modal\r\n              show={this.state.openDetailRecord}\r\n              onHide={this.handleCloseDetailRecord}\r\n          >\r\n            <ContentDetailRecord  content={this.state.contentDetailRecord}/>\r\n          </Modal>\r\n          <TableFooter\r\n              config={this.config}\r\n              id={this.props.id}\r\n              isFirst={isFirst}\r\n              isLast={isLast}\r\n              paginationInfo={paginationInfo}\r\n              pages={pages}\r\n              page_number={this.state.page_number}\r\n              is_temp_page={this.state.is_temp_page}\r\n              temp_page_number={this.state.temp_page_number}\r\n              firstPage={this.firstPage.bind(this)}\r\n              lastPage={this.lastPage.bind(this)}\r\n              previousPage={this.previousPage.bind(this)}\r\n              nextPage={this.nextPage.bind(this)}\r\n              goToPage={this.goToPage.bind(this)}\r\n              changePageSize={this.changePageSize.bind(this)}\r\n              onPageChange={this.onPageChange.bind(this)}\r\n              onPageBlur={this.onPageBlur.bind(this)}/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Define component display name\r\n */\r\nDetailHistoryDast.displayName = 'ReactDatatable';\r\n\r\n/**\r\n * Define defaultProps for this component\r\n */\r\nDetailHistoryDast.defaultProps = {\r\n  id: \"as-react-datatable\",\r\n  className: \"table table-bordered table-striped\",\r\n  columns: [],\r\n  config: {\r\n    button: {\r\n      excel: true,\r\n      print: true,\r\n      csv: true\r\n    },\r\n    filename: \"table\",\r\n    key_column:\"id\",\r\n    language: {\r\n      length_menu: \"Show _MENU_ records per page\",\r\n      filter: \"Search in records...\",\r\n      info: \"Showing _START_ to _END_ of _TOTAL_ entries\",\r\n      pagination: {\r\n        first: \"First\",\r\n        previous: \"Previous\",\r\n        next: \"Next\",\r\n        last: \"Last\"\r\n      }\r\n    },\r\n    length_menu: [10, 25, 50, 75, 100],\r\n    no_data_text: \"No rows found\",\r\n    page_size: 10,\r\n    sort: {\r\n      column: \"test\",\r\n      order: \"asc\"\r\n    },\r\n    show_length_menu: true,\r\n    show_filter: true,\r\n    show_pagination: true,\r\n    show_info: true,\r\n    show_first: true,\r\n    show_last: true\r\n  },\r\n  dynamic: false,\r\n  records: [],\r\n  total_record: 0,\r\n  onChange: () => { },\r\n  onPageChange: () => { },\r\n  onRowClicked: () => { }\r\n}\r\n\r\nexport default DetailHistoryDast;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}